{"version":3,"file":"static/js/1013.24470615.chunk.js","mappings":"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","sources":["views/auth/forget-password-link/index.js","../node_modules/@material-ui/core/esm/Link/Link.js"],"sourcesContent":["import React from \"react\";\nimport \"src/scss/main.css\";\nimport Logo from \"src/component/Logo\";\nimport { BsCheckCircle } from \"react-icons/bs\";\nimport { Typography, Grid, Link, Box, makeStyles } from \"@material-ui/core\";\nconst useStyles = makeStyles((theme) => ({\n  headbox: {\n    background: theme.palette.background.dark1,\n    \"& h5\": {\n      color: theme.palette.text.black,\n    },\n    \"& p\": {\n      color: theme.palette.text.black,\n    },\n    \"& svg\": {\n      color: theme.palette.text.black,\n    },\n  },\n}));\nfunction ForgetasswordLink(props) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.headbox}>\n      <Grid container>\n        <Grid sm={3} md={4} />\n        <Grid\n          className=\"d-flex\"\n          container\n          sm={6}\n          md={4}\n          direction={\"column\"}\n          spacing={1}\n          style={{ textAlign: \"center\", height: \"100vh\" }}\n        >\n          <Grid item>\n            <Logo\n              width=\"180\"\n              style={{ padding: \"30px 0\", cursor: \"pointer\" }}\n            />\n            <BsCheckCircle\n              display=\"block\"\n              fontSize=\"80\"\n              style={{ margin: \"0 auto\" }}\n              className={classes.checkicon1}\n            />\n            <Typography variant=\"h5\" className=\"extra-bold\">\n              Instructions sent!\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body2\" className=\"padding10\">\n              We have Sent you instructions on your mail <b>mail@mail.com</b>\n              .please check and follow the steps.\n            </Typography>\n          </Grid>\n\n          <Grid item>\n            <Typography\n              color=\"primary.main\"\n              variant=\"body2\"\n              style={{ marginTop: \"20px\" }}\n            >\n              <Link href=\"#\">Back To Login</Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default ForgetasswordLink;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"],"names":["useStyles","makeStyles","theme","headbox","background","palette","dark1","color","text","black","props","classes","className","container","sm","md","direction","spacing","style","textAlign","height","item","width","padding","cursor","display","fontSize","margin","checkicon1","variant","marginTop","href","Link","React","ref","_props$color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","userSelect","verticalAlign","borderStyle","name"],"sourceRoot":""}