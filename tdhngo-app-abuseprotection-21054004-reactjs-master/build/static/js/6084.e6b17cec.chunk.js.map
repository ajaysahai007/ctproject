{"version":3,"file":"static/js/6084.e6b17cec.chunk.js","mappings":"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","sources":["utils/index.js","views/pages/Dashboard/StaticManagement/ViewTeam.js"],"sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport moment from \"moment\";\nexport function sortAddress(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 4)}`;\n  return sortAdd;\n}\n\nexport function sortString(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 10)}`;\n  return sortAdd;\n}\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const convertDateTime = (val) => {\n  var tempDate = new Date(val);\n  const toDateFormat = moment(tempDate).format(\"DD-MMM-yyyy hh:mm a\");\n  return toDateFormat;\n};\n\nexport const getBase64 = (file, cb) => {\n  let reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = function () {\n    cb(reader.result);\n  };\n  reader.onerror = function (err) {\n    console.log(\"Error: \", err);\n  };\n};\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  TextField,\n  FormControl,\n  IconButton,\n  FormHelperText,\n  MenuItem,\n  Select,\n  Container,\n  Divider,\n} from \"@material-ui/core\";\nimport JoditEditor from \"jodit-react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport * as yep from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport { FiUpload } from \"react-icons/fi\";\nimport { addImageHandler, getBase64 } from \"src/utils\";\nimport { useHistory } from \"react-router-dom\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nconst useStyles = makeStyles((theme) => ({\n  NftBreed: {\n    padding: \"23px 0 \",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\",\n    // margin: \"0 10px\",\n  },\n  main: {\n    border: \"1px solid #F38500\",\n    padding: \"40px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"#FEDDB6\",\n  },\n  divider: {\n    marginTop: \"10px\",\n    background: \"#F38500\",\n  },\n  textField: {\n    maxWidth: \"100%\",\n  },\n\n  image: {\n    cursor: \"pointer\",\n  },\n  upload: {\n    width: \"150px\",\n    height: \"150px\",\n    margin: \"16px 0\",\n    cursor: \"pointer\",\n    borderRadius: \"20px\",\n    position: \"relative\",\n    \"& img\": {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px solid #F38500\",\n      // borderRadius: \"50%\",\n      objectFit: \"cover\",\n    },\n\n    \"& button\": {\n      position: \"absolute\",\n      border: \"3px solid black\",\n      bottom: 0,\n      right: 0,\n      backgroundColor: \"#fff\",\n      color: \"#000\",\n      fontSize: \"15px\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n        border: \"3px solid black\",\n      },\n      \"& input\": {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        opacity: 0,\n      },\n    },\n  },\n  devicelistHeading: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    \"& h3\": {\n      padding: \"1rem 0\",\n      color: theme.palette.text.black,\n    },\n    \"& .icon1\": {\n      height: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingRight: \"7px\",\n      },\n    },\n    \"& .icon2\": {\n      height: \"20px\",\n      paddingLeft: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  newbtn: {\n    \"@media(max-width:400px)\": {\n      marginTop: \"10px\",\n    },\n  },\n}));\n\nexport default function CreateNFT(userProfileData) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const editor = useRef(null);\n  const searchKey = location.search.split(\"?\")[1];\n  const [teamUserData, setViewUserData] = useState([]);\n  console.log(\"searchKey--\", searchKey);\n  const [base64Img, setBase64Img] = useState(\"\");\n  const [base64Img1, setBase64Img1] = useState(\"\");\n  const [imgFile, setImgfile] = useState(\"\");\n  const [profile, setprofile] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [resetToken, setResetToken] = useState(\"\");\n\n  function imageUpload(event) {\n    let base64img = userData.profilepic;\n    let reader = new FileReader();\n    reader.onload = function () {\n      base64img = reader.result;\n      setBase64Img(base64img);\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n  const [userData, setUserData] = useState({\n    coverPic: \"\",\n    profilePic: \"\",\n    profilePic: \"\",\n    coverPic: \"\",\n  });\n  const formInitialValue = {\n    partnerName: \"\",\n    url: \"\",\n  };\n  const formValidationSchema = yep.object().shape({\n    item1: yep\n      .string()\n      .required(\" Item is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\")\n      .matches(\n        /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/,\n        \"Only alphabets and white spaces are allowed for this field number are not. \"\n      ),\n    item2: yep\n      .string()\n      .required(\" Item is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\")\n      .matches(\n        /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/,\n        \"Only alphabets and white spaces are allowed for this field number are not. \"\n      ),\n    item3: yep\n      .string()\n      .required(\" Item is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\")\n      .matches(\n        /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/,\n        \"Only alphabets and white spaces are allowed for this field number are not. \"\n      ),\n    name: yep\n      .string()\n      .required(\" Name is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\")\n      .matches(\n        /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/,\n        \"Only alphabets and white spaces are allowed for this field number are not. \"\n      ),\n    desc: yep\n      .string()\n      .required(\" Descritpion is required\")\n      .min(10, \"Please enter at least 10 characters\")\n      .max(350, \"You can enter only 350 characters\"),\n  });\n\n  return (\n    <Box className={classes.NftBreed}>\n      <Box className={classes.devicelistHeading}>\n        <Typography variant=\"h1\" className=\"headingText\">\n          {`${searchKey} Tutorial Screen`}\n        </Typography>\n      </Box>\n      <Divider className={classes.divider} />\n      <Container maxWidth=\"md\">\n        <Formik\n          initialValues={formInitialValue}\n          initialStatus={{\n            success: false,\n            successMsg: \"\",\n          }}\n          validationSchema={formValidationSchema}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            touched,\n            values,\n            setFieldValue,\n          }) => (\n            <Form onSubmit={handleSubmit}>\n              <Box mt={10} mb={2} className={classes.main}>\n                <Grid container spacing={2}>\n                  <Grid item md={12} sm={12} lg={12} xs={12}>\n                    <Box\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        width: \"100%\",\n                      }}\n                    >\n                      <Box>\n                        {searchKey === \"Add\" ? (\n                          <>\n                            <figure className={classes.upload}>\n                              <img\n                                src={base64Img ? base64Img : \"/images/t3.jpeg\"}\n                              />\n                              <IconButton>\n                                <FiUpload />\n                                <input\n                                  type=\"file\"\n                                  accept=\"image/*\"\n                                  onChange={imageUpload}\n                                />\n                              </IconButton>\n                            </figure>\n                          </>\n                        ) : searchKey === \"View\" ? (\n                          <figure className={classes.upload}>\n                            <img src=\"/images/t3.jpeg\" />\n                          </figure>\n                        ) : (\n                          <figure className={classes.upload}>\n                            <img\n                              src={base64Img ? base64Img : \"/images/t3.jpeg\"}\n                            />\n                            <IconButton>\n                              <FiUpload />\n                              <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={imageUpload}\n                              />\n                            </IconButton>\n                          </figure>\n                        )}\n                        {searchKey === \"Add\" ? (\n                          <>\n                            <Box\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                width: \"100%\",\n                              }}\n                            >\n                              <Typography variant=\"h6\" color=\"primary\">\n                                Please select image\n                              </Typography>\n                            </Box>\n                          </>\n                        ) : searchKey === \"View\" ? (\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                              width: \"100%\",\n                            }}\n                          >\n                            <Typography variant=\"h6\" color=\"primary\">\n                              Tutorial Screen Image\n                            </Typography>\n                          </Box>\n                        ) : (\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                              width: \"100%\",\n                            }}\n                          >\n                            <Typography variant=\"h6\" color=\"primary\">\n                              Please select image\n                            </Typography>\n                          </Box>\n                        )}\n                        <Box\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            width: \"100%\",\n                          }}\n                        ></Box>\n                      </Box>\n                    </Box>\n                  </Grid>\n\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box mt={2}>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Box mt={2}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Tutorial Screen Title :\n                            </Typography>\n                            {searchKey === \"Add\" ? (\n                              <>\n                                <TextField\n                                  variant=\"outlined\"\n                                  name=\"name\"\n                                  type=\"text\"\n                                  error={Boolean(touched.name && errors.name)}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  placeholder=\"Please enter Resource Name\"\n                                  className={classes.textField}\n                                />\n                                <FormHelperText\n                                  error\n                                  style={{\n                                    margin: \"0px\",\n                                    fontSize: \"12px\",\n                                  }}\n                                >\n                                  {touched.name && errors.name}\n                                </FormHelperText>\n                              </>\n                            ) : searchKey === \"View\" ? (\n                              <>\n                                <TextField\n                                  readOnly\n                                  variant=\"outlined\"\n                                  value=\"This is Tutorial Screen\"\n                                  className={classes.textField}\n                                  inputProps={{ readOnly: \"true\" }}\n                                />\n                              </>\n                            ) : (\n                              <>\n                                <TextField\n                                  variant=\"outlined\"\n                                  name=\"name\"\n                                  type=\"text\"\n                                  error={Boolean(touched.name && errors.name)}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  placeholder=\"Please enter tutorial screen title\"\n                                  className={classes.textField}\n                                />\n                                <FormHelperText\n                                  error\n                                  style={{ margin: \"0px\", fontSize: \"12px\" }}\n                                >\n                                  {touched.name && errors.name}\n                                </FormHelperText>\n                              </>\n                            )}\n                          </Box>\n                          <Box mt={2}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              About :\n                            </Typography>\n                            {searchKey === \"Add\" ? (\n                              <>\n                                {/* <TextField\n                                    variant=\"outlined\"\n                                    name=\"desc\"\n                                    error={Boolean(touched.desc && errors.desc)}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    placeholder=\"Enter About Description\"\n                                    multiline\n                                    rows={4}\n                                    className={classes.textField}\n                                  /> */}\n                                <Box>\n                                  <JoditEditor\n                                    ref={editor}\n                                    // value={description}\n                                    // config={config}\n                                    tabIndex={1} // tabIndex of textarea\n                                    // onBlur={(e) => setDescription(e)}\n                                    onChange={(newContent) => {}}\n                                  />\n                                </Box>\n                                <FormHelperText\n                                  error\n                                  style={{ margin: \"0px\", fontSize: \"12px\" }}\n                                >\n                                  {touched.desc && errors.desc}\n                                </FormHelperText>\n                              </>\n                            ) : searchKey === \"View\" ? (\n                              <TextField\n                                variant=\"outlined\"\n                                inputProps={{ readOnly: \"true\" }}\n                                aria-readonly\n                                value=\"This is the Tutorial Description\"\n                                multiline\n                                rows={4}\n                                placeholder=\"https://www.lipsum.com/\"\n                                className={classes.textField}\n                              />\n                            ) : (\n                              <>\n                                {/* <TextField\n                                    variant=\"outlined\"\n                                    name=\"desc\"\n                                    error={Boolean(touched.desc && errors.desc)}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    \n                                    placeholder=\"Enter Tutorial screen Description\"\n                                    className={classes.textField}\n                                    multiline\n                                    rows={4}\n                                  /> */}\n                                <Box>\n                                  <JoditEditor\n                                    ref={editor}\n                                    // value={description}\n                                    // config={config}\n                                    tabIndex={1} // tabIndex of textarea\n                                    // onBlur={(e) => setDescription(e)}\n                                    onChange={(newContent) => {}}\n                                  />\n                                </Box>\n                                <FormHelperText\n                                  error\n                                  style={{ margin: \"0px\", fontSize: \"12px\" }}\n                                >\n                                  {touched.desc && errors.desc}\n                                </FormHelperText>\n                              </>\n                            )}\n                          </Box>\n                          {/* <Box mt={2}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              List Items:\n                            </Typography>\n                            {searchKey === \"Add\" ? (\n                              <>\n                                <Box\n                                  style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Box style={{ width: \"100%\" }}>\n                                    <TextField\n                                      variant=\"outlined\"\n                                      name=\"item1\"\n                                      type=\"text\"\n                                      error={Boolean(\n                                        touched.item1 && errors.item1\n                                      )}\n                                      onBlur={handleBlur}\n                                      onChange={handleChange}\n                                      placeholder=\"Please enter item\"\n                                      className={classes.textField}\n                                    />\n                                    <FormHelperText\n                                      error\n                                      style={{\n                                        margin: \"0px\",\n                                        fontSize: \"12px\",\n                                      }}\n                                    >\n                                      {touched.item1 && errors.item1}\n                                    </FormHelperText>\n                                  </Box>\n                                  <Box\n                                    style={{\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    &nbsp;&nbsp;\n                                    <DeleteIcon\n                                      style={{\n                                        color: \"#fff\",\n                                        fontSize: \"22px\",\n                                        cursor: \"pointer\",\n                                        background: \"#F38500\",\n                                        padding: \"8px 8px\",\n                                        borderRadius: \"7px\",\n                                      }}\n                                      // onClick={handleClickOpen}\n                                    />\n                                  </Box>\n                                </Box>\n                              </>\n                            ) : searchKey === \"View\" ? (\n                              <>\n                                <Box>\n                                  <Box>\n                                    <TextField\n                                      readOnly\n                                      variant=\"outlined\"\n                                      value=\"Items\"\n                                      className={classes.textField}\n                                      inputProps={{ readOnly: \"true\" }}\n                                    />\n                                  </Box>\n                                </Box>\n                              </>\n                            ) : (\n                              <>\n                                <Box\n                                  style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Box style={{ width: \"100%\" }}>\n                                    <TextField\n                                      variant=\"outlined\"\n                                      name=\"item1\"\n                                      type=\"text\"\n                                      error={Boolean(\n                                        touched.item1 && errors.item1\n                                      )}\n                                      onBlur={handleBlur}\n                                      onChange={handleChange}\n                                      placeholder=\"Please enter item\"\n                                      className={classes.textField}\n                                    />\n                                    <FormHelperText\n                                      error\n                                      style={{\n                                        margin: \"0px\",\n                                        fontSize: \"12px\",\n                                      }}\n                                    >\n                                      {touched.item1 && errors.item1}\n                                    </FormHelperText>\n                                  </Box>\n                                  <Box\n                                    style={{\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    &nbsp;&nbsp;\n                                    <DeleteIcon\n                                      style={{\n                                        color: \"#fff\",\n                                        fontSize: \"22px\",\n                                        cursor: \"pointer\",\n                                        background: \"#F38500\",\n                                        padding: \"8px 8px\",\n                                        borderRadius: \"7px\",\n                                      }}\n                                      // onClick={handleClickOpen}\n                                    />\n                                  </Box>\n                                </Box>\n                              </>\n                            )}\n                          </Box>\n                          <Box mt={2}>\n                            {searchKey === \"Add\" ? (\n                              <>\n                                <Box\n                                  style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Box style={{ width: \"100%\" }}>\n                                    <TextField\n                                      variant=\"outlined\"\n                                      name=\"item2\"\n                                      type=\"text\"\n                                      error={Boolean(\n                                        touched.item2 && errors.item2\n                                      )}\n                                      onBlur={handleBlur}\n                                      onChange={handleChange}\n                                      placeholder=\"Please enter item\"\n                                      className={classes.textField}\n                                    />\n                                    <FormHelperText\n                                      error\n                                      style={{\n                                        margin: \"0px\",\n                                        fontSize: \"12px\",\n                                      }}\n                                    >\n                                      {touched.item2 && errors.item2}\n                                    </FormHelperText>\n                                  </Box>\n                                  <Box\n                                    style={{\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    &nbsp;&nbsp;\n                                    <DeleteIcon\n                                      style={{\n                                        color: \"#fff\",\n                                        fontSize: \"22px\",\n                                        cursor: \"pointer\",\n                                        background: \"#F38500\",\n                                        padding: \"8px 8px\",\n                                        borderRadius: \"7px\",\n                                      }}\n                                      // onClick={handleClickOpen}\n                                    />\n                                  </Box>\n                                </Box>\n                              </>\n                            ) : searchKey === \"View\" ? (\n                              <>\n                                <Box>\n                                  <Box>\n                                    <TextField\n                                      readOnly\n                                      variant=\"outlined\"\n                                      value=\"Items\"\n                                      className={classes.textField}\n                                      inputProps={{ readOnly: \"true\" }}\n                                    />\n                                  </Box>\n                                </Box>\n                              </>\n                            ) : (\n                              <>\n                                <Box\n                                  style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Box style={{ width: \"100%\" }}>\n                                    <TextField\n                                      variant=\"outlined\"\n                                      name=\"item2\"\n                                      type=\"text\"\n                                      error={Boolean(\n                                        touched.item2 && errors.item2\n                                      )}\n                                      onBlur={handleBlur}\n                                      onChange={handleChange}\n                                      placeholder=\"Please enter item\"\n                                      className={classes.textField}\n                                    />\n                                    <FormHelperText\n                                      error\n                                      style={{\n                                        margin: \"0px\",\n                                        fontSize: \"12px\",\n                                      }}\n                                    >\n                                      {touched.item2 && errors.item2}\n                                    </FormHelperText>\n                                  </Box>\n                                  <Box\n                                    style={{\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    &nbsp;&nbsp;\n                                    <DeleteIcon\n                                      style={{\n                                        color: \"#fff\",\n                                        fontSize: \"22px\",\n                                        cursor: \"pointer\",\n                                        background: \"#F38500\",\n                                        padding: \"8px 8px\",\n                                        borderRadius: \"7px\",\n                                      }}\n                                      // onClick={handleClickOpen}\n                                    />\n                                  </Box>\n                                </Box>\n                              </>\n                            )}\n                          </Box>\n                          <Box mt={2}>\n                            {searchKey === \"Add\" ? (\n                              <>\n                                <Box\n                                  style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Box style={{ width: \"100%\" }}>\n                                    <TextField\n                                      variant=\"outlined\"\n                                      name=\"item3\"\n                                      type=\"text\"\n                                      error={Boolean(\n                                        touched.item3 && errors.item3\n                                      )}\n                                      onBlur={handleBlur}\n                                      onChange={handleChange}\n                                      placeholder=\"Please enter item\"\n                                      className={classes.textField}\n                                    />\n                                    <FormHelperText\n                                      error\n                                      style={{\n                                        margin: \"0px\",\n                                        fontSize: \"12px\",\n                                      }}\n                                    >\n                                      {touched.item3 && errors.item3}\n                                    </FormHelperText>\n                                  </Box>\n                                  <Box\n                                    style={{\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    &nbsp;&nbsp;\n                                    <DeleteIcon\n                                      style={{\n                                        color: \"#fff\",\n                                        fontSize: \"22px\",\n                                        cursor: \"pointer\",\n                                        background: \"#F38500\",\n                                        padding: \"8px 8px\",\n                                        borderRadius: \"7px\",\n                                      }}\n                                      // onClick={handleClickOpen}\n                                    />\n                                  </Box>\n                                </Box>\n                              </>\n                            ) : searchKey === \"View\" ? (\n                              <>\n                                <Box>\n                                  <Box>\n                                    <TextField\n                                      readOnly\n                                      variant=\"outlined\"\n                                      value=\"Items\"\n                                      className={classes.textField}\n                                      inputProps={{ readOnly: \"true\" }}\n                                    />\n                                  </Box>\n                                </Box>\n                              </>\n                            ) : (\n                              <>\n                                <Box\n                                  style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                  }}\n                                >\n                                  <Box style={{ width: \"100%\" }}>\n                                    <TextField\n                                      variant=\"outlined\"\n                                      name=\"item3\"\n                                      type=\"text\"\n                                      error={Boolean(\n                                        touched.item3 && errors.item3\n                                      )}\n                                      onBlur={handleBlur}\n                                      onChange={handleChange}\n                                      placeholder=\"Please enter item\"\n                                      className={classes.textField}\n                                    />\n                                    <FormHelperText\n                                      error\n                                      style={{\n                                        margin: \"0px\",\n                                        fontSize: \"12px\",\n                                      }}\n                                    >\n                                      {touched.item3 && errors.item3}\n                                    </FormHelperText>\n                                  </Box>\n                                  <Box\n                                    style={{\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    &nbsp;&nbsp;\n                                    <DeleteIcon\n                                      style={{\n                                        color: \"#fff\",\n                                        fontSize: \"22px\",\n                                        cursor: \"pointer\",\n                                        background: \"#F38500\",\n                                        padding: \"8px 8px\",\n                                        borderRadius: \"7px\",\n                                      }}\n                                      // onClick={handleClickOpen}\n                                    />\n                                  </Box>\n                                </Box>\n                              </>\n                            )}\n                          </Box> */}\n\n                          <Box\n                            style={{\n                              marginTop: \"16px\",\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"center\",\n                            }}\n                          >\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              style={{ marginBottom: \"10px\" }}\n                              onClick={() => history.push(\"/team-management\")}\n                              className={classes.newbtn}\n                            >\n                              Back\n                            </Button>{\" \"}\n                            &nbsp;&nbsp;\n                            {searchKey === \"Add\" ? (\n                              <>\n                                <Box>\n                                  <Button\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                  >\n                                    Submit\n                                  </Button>\n                                </Box>\n                              </>\n                            ) : searchKey === \"View\" ? (\n                              <>\n                                <Box>\n                                  <Button\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    onClick={() => {\n                                      history.push({\n                                        pathname: \"/view-team\",\n                                        search: \"Edit\",\n                                      });\n                                    }}\n                                    color=\"primary\"\n                                  >\n                                    Edit\n                                  </Button>\n                                </Box>\n                              </>\n                            ) : (\n                              <Box>\n                                <Button\n                                  variant=\"contained\"\n                                  type=\"submit\"\n                                  color=\"primary\"\n                                >\n                                  Update\n                                </Button>\n                              </Box>\n                            )}\n                          </Box>\n                        </FormControl>\n                      </form>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n}\n"],"names":["sortAddress","add","slice","length","convertDateTime","val","tempDate","Date","moment","format","useStyles","makeStyles","theme","NftBreed","padding","formControl","margin","spacing","minWidth","width","main","border","borderRadius","backgroundColor","divider","marginTop","background","textField","maxWidth","image","cursor","upload","height","position","objectFit","bottom","right","color","fontSize","top","left","opacity","devicelistHeading","display","justifyContent","alignItems","palette","text","black","paddingRight","breakpoints","only","paddingLeft","newbtn","CreateNFT","userProfileData","classes","history","useHistory","location","useLocation","editor","useRef","searchKey","search","split","useState","console","log","base64Img","setBase64Img","imageUpload","event","base64img","userData","profilepic","reader","FileReader","onload","result","readAsDataURL","target","files","coverPic","profilePic","formValidationSchema","yep","shape","item1","required","min","max","matches","item2","item3","name","desc","className","variant","initialValues","partnerName","url","initialStatus","success","successMsg","validationSchema","errors","handleBlur","handleChange","handleSubmit","touched","values","setFieldValue","onSubmit","mt","mb","container","item","md","sm","lg","xs","style","src","type","accept","onChange","autoComplete","paddingBottom","error","Boolean","onBlur","placeholder","readOnly","value","inputProps","ref","tabIndex","newContent","multiline","rows","flexWrap","marginBottom","onClick","push","pathname"],"sourceRoot":""}