{"version":3,"file":"static/js/7994.fbe73d16.chunk.js","mappings":"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","sources":["utils/index.js","views/pages/Dashboard/StaticManagement/AddFaqquestion.js"],"sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport moment from \"moment\";\nexport function sortAddress(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 4)}`;\n  return sortAdd;\n}\n\nexport function sortString(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 10)}`;\n  return sortAdd;\n}\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const convertDateTime = (val) => {\n  var tempDate = new Date(val);\n  const toDateFormat = moment(tempDate).format(\"DD-MMM-yyyy hh:mm a\");\n  return toDateFormat;\n};\n\nexport const getBase64 = (file, cb) => {\n  let reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = function () {\n    cb(reader.result);\n  };\n  reader.onerror = function (err) {\n    console.log(\"Error: \", err);\n  };\n};\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  TextField,\n  FormControl,\n  IconButton,\n  FormHelperText,\n  MenuItem,\n  Select,\n  Container,\n  Divider,\n} from \"@material-ui/core\";\n\nimport { Link, useLocation } from \"react-router-dom\";\nimport JoditEditor from \"jodit-react\";\nimport Button from \"@material-ui/core/Button\";\nimport { FiUpload } from \"react-icons/fi\";\nimport { addImageHandler, getBase64 } from \"src/utils\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\n\nconst useStyles = makeStyles((theme) => ({\n  NftBreed: {\n    padding: \"23px 0 \",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\",\n    margin: \"0 10px\",\n  },\n  main: {\n    border: \"1px solid #F38500\",\n    padding: \"40px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"#FEDDB6\",\n  },\n  divider: {\n    marginTop: \"30px\",\n  },\n  textField: {\n    maxWidth: \"100%\",\n  },\n\n  image: {\n    // display: \"flex\",\n    // justifyContent: \"center\",\n    cursor: \"pointer\",\n  },\n  upload: {\n    width: \"150px\",\n    height: \"150px\",\n    margin: \"16px 0\",\n    cursor: \"pointer\",\n    borderRadius: \"20px\",\n    position: \"relative\",\n    \"& img\": {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px solid #01FBB4\",\n      borderRadius: \"50%\",\n      objectFit: \"cover\",\n    },\n\n    \"& button\": {\n      position: \"absolute\",\n      border: \"3px solid black\",\n      bottom: 0,\n      right: 0,\n      backgroundColor: \"#fff\",\n      color: \"#000\",\n      fontSize: \"15px\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n        border: \"3px solid black\",\n      },\n      \"& input\": {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        opacity: 0,\n      },\n    },\n  },\n  devicelistHeading: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    \"& h3\": {\n      padding: \"1rem 0\",\n      color: theme.palette.text.black,\n    },\n    \"& .icon1\": {\n      height: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingRight: \"7px\",\n      },\n    },\n    \"& .icon2\": {\n      height: \"20px\",\n      paddingLeft: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  newbtn: {\n    \"@media(max-width:400px)\": {\n      marginTop: \"10px\",\n    },\n  },\n  divider: {\n    marginTop: \"10px\",\n    background: \"#F38500\",\n  },\n}));\n\nexport default function CreateNFT(userProfileData) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n  const [Idd, setIdd] = useState();\n  const faqData = location.state;\n  const [staticData, setSattaicsData] = useState();\n  // const faqQues = faqData.question;\n  const [answer, setAnswer] = useState(\"\");\n  const [btnText, setBtnText] = useState(\"SUBMIT\");\n  const [question, setQues] = useState(\"\");\n  const [isSubmit, setIsSubmit] = useState(false);\n  const editor = useRef(null);\n\n  // console.log(\"faqID---\", faqData.question);\n  const [allData, setAllData] = useState(faqData);\n  console.log(\"allData-->>\", allData);\n\n  const FormHandleSubmit = async () => {\n    try {\n      if (question !== \"\" && answer !== \"\") {\n        // toast.error(\"Please fill the fields\");\n\n        setIsSubmit(true);\n        // const formdata = new FormData();\n        // formdata.append(\"question\", question);\n        // formdata.append(\"answer\", answer);\n        const res = await axios({\n          url: apiConfig.addFaq,\n          method: \"POST\",\n          headers: {\n            token: window.sessionStorage.getItem(\"token\"),\n          },\n          data: {\n            question: question,\n            answer: answer,\n          },\n        });\n        if (res) {\n          setIsSubmit(false);\n          history.push(\"/Faq-manage\");\n          setIsLoading(false);\n        }\n      }\n    } catch (error) {\n      setIsSubmit(false);\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <Box className={classes.NftBreed}>\n      <Box className={classes.devicelistHeading}>\n        <Typography variant=\"h1\" className=\"headingText\">\n          Add FAQ\n        </Typography>\n      </Box>\n      <Divider className={classes.divider} />\n\n      <Container maxWidth=\"md\">\n        <Box mt={5} mb={2} className={classes.main}>\n          <Grid container spacing={2}>\n            <Grid\n              item\n              md={12}\n              sm={12}\n              lg={12}\n              xs={12}\n              className={classes.image}\n            >\n              <Box mt={2}>\n                <form\n                  className=\"formBox p-0\"\n                  onSubmit={(event) => FormHandleSubmit(event)}\n                >\n                  <Grid container spacing={2} className=\"BreedDetails\">\n                    <FormControl\n                      variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <>\n                        <Box mt={2}>\n                          <Typography\n                            variant=\"h5\"\n                            color=\"primary\"\n                            style={{ paddingBottom: \"8px\" }}\n                          >\n                            Question :\n                          </Typography>\n                          <TextField\n                            variant=\"outlined\"\n                            placeholder=\"Enter your Question\"\n                            className={classes.textField}\n                            name=\"question\"\n                            value={question}\n                            onChange={(e) => setQues(e.target.value)}\n                          />\n                          {/* {setIsSubmit && question === \"\" && (\n                            <div>snjkfkdkfdkf</div>\n                          )} */}\n                        </Box>\n                        <Box>\n                          <Box style={{ marginTop: \"10px\" }}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Answer :\n                            </Typography>\n                            <JoditEditor\n                              ref={editor}\n                              name=\"answer\"\n                              // value={faqData.answer}\n                              onBlur={(e) => setAnswer(e)}\n                              // value={description}\n                              // config={config}\n                              tabIndex={1} // tabIndex of textarea\n                              // onBlur={(e) => setDescription(e)}\n                              onChange={(newContent) => {}}\n                            />\n                          </Box>\n                        </Box>\n                      </>\n\n                      <Box style={{ marginTop: \"16px\" }}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          className={classes.newbtn}\n                          onClick={() => history.push(\"/Faq-manage\")}\n                        >\n                          Back\n                        </Button>\n                        &nbsp;&nbsp;\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          className={classes.newbtn}\n                          onClick={FormHandleSubmit}\n                        >\n                          Add\n                        </Button>\n                      </Box>\n                    </FormControl>\n                  </Grid>\n                </form>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n"],"names":["sortAddress","add","slice","length","convertDateTime","val","tempDate","Date","moment","format","useStyles","makeStyles","theme","NftBreed","padding","formControl","margin","spacing","minWidth","width","main","border","borderRadius","backgroundColor","divider","marginTop","textField","maxWidth","image","cursor","upload","height","position","objectFit","bottom","right","color","fontSize","top","left","opacity","devicelistHeading","display","justifyContent","alignItems","palette","text","black","paddingRight","breakpoints","only","paddingLeft","newbtn","background","CreateNFT","userProfileData","classes","history","useHistory","location","useLocation","useState","setIsLoading","faqData","state","answer","setAnswer","question","setQues","setIsSubmit","editor","useRef","allData","console","log","FormHandleSubmit","axios","url","apiConfig","method","headers","token","window","sessionStorage","getItem","data","push","toast","message","className","variant","mt","mb","container","item","md","sm","lg","xs","onSubmit","event","style","paddingBottom","placeholder","name","value","onChange","e","target","ref","onBlur","tabIndex","newContent","onClick"],"sourceRoot":""}