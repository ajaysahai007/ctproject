{"version":3,"file":"static/js/843.9dc5d834.chunk.js","mappings":"6MA4BA,KAAeA,EAAAA,EAAAA,IAxBA,SAACC,GAAK,MAAM,CACzBC,iBAAkB,CAChBC,MAAO,SAEV,GAoBiC,CAAEC,WAAW,GAA/C,EAlBA,SAAgCC,GAC9B,IAAQC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OACE,SAAC,IAAG,CAACJ,MAAM,iBAAiBK,GAAI,IAAKC,QAAQ,OAAM,UACjD,SAAC,IAAgB,CACfH,KAAMA,GAAc,GACpBI,UAAWJ,EAAQA,EAAO,EAAK,GAAK,EACpCK,UAAWJ,EAAQL,oBAI3B,G,wGClBe,SAASU,IACtB,OACE,SAAC,IAAG,CACFC,MAAO,CAAEJ,QAAS,OAAQK,eAAgB,SAAUC,WAAY,QAAS,UAEzE,SAAC,IAAU,CAACF,MAAO,CAAEV,MAAO,QAASa,SAAU,QAAS,4BAK9D,C,kSC4BkBC,EAAAA,EAAAA,IAAW,SAAChB,GAAK,MAAM,CACvCiB,cAAe,CACbT,QAAS,OACTU,WAAY,UAGdC,kBAAmB,CACjBX,QAAS,OACTK,eAAgB,QAChBK,WAAY,SACZ,OAAQ,CACNE,QAAS,SACTlB,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,YAAW,QACTC,OAAQ,OACRC,aAAc,QACbzB,EAAM0B,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,OACPJ,OAAQ,MACRC,aAAc,QAGlB,YAAW,QACTD,OAAQ,OACRK,YAAa,QACZ7B,EAAM0B,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,OACPJ,OAAQ,MACRK,YAAa,SAInBC,aAAc,CACZtB,QAAS,OACTU,WAAY,UAEda,aAAc,CACZH,MAAO,OACPJ,OAAQ,OACRQ,WAAY,QACZC,aAAc,SAEhBC,UAAW,CACT,OAAQ,CACNhC,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,OAAQ,CACNrB,MAAOF,EAAMqB,QAAQC,KAAKC,QAG9BY,YAAa,CACXC,SAAU,OACVR,MAAO,QAETS,UAAW,CACTnC,MAAO,QAEToC,QAAS,CAEPxB,WAAY,OACZ,eAAgB,CACdyB,gBAAiB,UACjB,OAAQ,CACNrC,MAAO,OACPkB,QAAS,UAKfoB,UAAW,CACTtC,MAAO,QACPuC,SAAU,WACV,OAAQ,CACNA,SAAU,WACVC,IAAK,QACLV,WAAYhC,EAAMqB,QAAQW,WAAWW,MAErCvB,QAAS,WACTwB,KAAM,MACN7B,SAAU,OACVb,MAAO,UACP2C,WAAY,KAEd,UAAW,CACT3C,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,UAAW,CACTrB,MAAO,OACPa,SAAU,OAEV8B,WAAY,OAEd,aAAc,CACZ3C,MAAOF,EAAMqB,QAAQC,KAAKC,QAG9BuB,YAAW,QACTC,YAAa,OACbnB,MAAO,SACN5B,EAAM0B,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,UAGXoB,WAAY,CACVC,OAAQ,oBACR7B,QAAS,UACTlB,MAAO,OACP+B,aAAc,MAEd,QAAS,CACP/B,MAAO,UACPa,SAAU,SAGdmC,QAAS,CACPC,UAAW,QAEd,I,gBCvHmBnC,EAAAA,EAAAA,IAAW,SAAChB,GAAK,MAAM,CACvCiB,cAAe,CACbT,QAAS,OACTU,WAAY,UAGdC,kBAAmB,CACjBX,QAAS,OACTK,eAAgB,QAChBK,WAAY,SACZ,OAAQ,CACNE,QAAS,SACTlB,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,YAAW,QACTC,OAAQ,OACRC,aAAc,QACbzB,EAAM0B,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,OACPJ,OAAQ,MACRC,aAAc,QAGlB,YAAW,QACTD,OAAQ,OACRK,YAAa,QACZ7B,EAAM0B,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,OACPJ,OAAQ,MACRK,YAAa,SAInBC,aAAc,CACZtB,QAAS,OACTU,WAAY,UAEda,aAAc,CACZH,MAAO,OACPJ,OAAQ,OACRQ,WAAY,QACZC,aAAc,SAEhBC,UAAW,CACT,OAAQ,CACNhC,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,OAAQ,CACNrB,MAAOF,EAAMqB,QAAQC,KAAKC,QAG9BY,YAAa,CACXC,SAAU,OACVR,MAAO,QAETS,UAAW,CACTnC,MAAO,QAEToC,QAAS,CAEPxB,WAAY,OACZ,eAAgB,CACdyB,gBAAiB,UACjB,OAAQ,CACNrC,MAAO,OACPkB,QAAS,UAIfgC,SAAU,CACR,eAAgB,CACdb,gBAAiB,UACjB,OAAQ,CACNrC,MAAO,OACPkB,QAAS,UAIfoB,UAAW,CACTtC,MAAO,OACPuC,SAAU,WACV,OAAQ,CACNA,SAAU,WACVC,IAAK,QACLV,WAAYhC,EAAMqB,QAAQW,WAAWW,MAErCvB,QAAS,WACTwB,KAAM,MACN7B,SAAU,OACVb,MAAO,UACP2C,WAAY,KAEd,UAAW,CACT3C,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,UAAW,CACTrB,MAAO,YACPa,SAAU,OACV8B,WAAY,OAEd,aAAc,CACZ3C,MAAOF,EAAMqB,QAAQC,KAAKC,QAG9ByB,WAAY,CACVC,OAAQ,qBACR7B,QAAS,MACTlB,MAAO,OACP+B,aAAc,MACdkB,UAAW,MACX,QAAS,CACPjD,MAAO,WACPa,SAAU,SAGdmC,QAAS,CACPC,UAAW,QAEd,I,2DCpHGE,G,8CAAYrC,EAAAA,EAAAA,IAAW,SAAChB,GAAK,MAAM,CACvCiB,cAAe,CACbT,QAAS,OACTU,WAAY,UAEdC,kBAAmB,CACjBX,QAAS,OACTK,eAAgB,gBAChByC,SAAS,OACTpC,WAAY,SACZ,OAAQ,CACNE,QAAS,SACTlB,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,YAAW,QACTC,OAAQ,OACRC,aAAc,QACbzB,EAAM0B,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,OACPJ,OAAQ,MACRC,aAAc,QAGlB,YAAW,QACTD,OAAQ,OACRK,YAAa,QACZ7B,EAAM0B,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,OACPJ,OAAQ,MACRK,YAAa,SAInBC,aAAc,CACZtB,QAAS,OACTU,WAAY,UAEda,aAAc,CACZH,MAAO,OACPJ,OAAQ,OACRQ,WAAY,QACZC,aAAc,SAEhBC,UAAW,CACT,OAAQ,CACNhC,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,OAAQ,CACNrB,MAAOF,EAAMqB,QAAQC,KAAKC,QAG9BY,YAAa,CACXC,SAAU,QAEZC,UAAW,CACTnC,MAAO,OAEP,SAAU,CAAC,GAEboC,QAAS,CACPlB,QAAS,cACT,eAAgB,CACdmB,gBAAiB,UACjB,OAAQ,CACNrC,MAAO,OACPa,SAAU,QAEZ,OAAQ,CACNb,MAAO,UACPa,SAAU,OACV8B,WAAY,MACZU,WAAY,UAIlBL,QAAS,CACPC,UAAW,OACXnB,WAAY,WAEdQ,UAAW,CACTtC,MAAO,OACPkB,QAAS,OACTqB,SAAU,WACV,OAAQ,CACNA,SAAU,WACVC,IAAK,QACLV,WAAYhC,EAAMqB,QAAQW,WAAWW,MAErCvB,QAAS,WACTwB,KAAM,MACN7B,SAAU,OACVb,MAAO,UACP2C,WAAY,KAEd,UAAW,CACT3C,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,UAAW,CACTR,SAAU,OACV8B,WAAY,IACZ3C,MAAOF,EAAMqB,QAAQC,KAAKC,OAE5B,aAAc,CACZrB,MAAOF,EAAMqB,QAAQC,KAAKC,QAG/B,KACKiC,EAAW,CACf,CACEC,GAAG,GAEL,CACEA,GAAG,GAEL,CACEA,GAAG,GAEL,CACEA,GAAG,IAGDC,GAAiB3D,EAAAA,EAAAA,IAAW,SAACC,GAAK,MAAM,CAC5C2D,KAAM,CACJ,sBAAuB,CACrBpB,gBAAiB,cAGtB,GANsBxC,CAMnB6D,EAAAA,GACW,SAAS,EAACxD,GACvB,MAAwByD,EAAAA,UAAe,GAAM,eAAtCC,EAAI,KAAEC,EAAO,KACdC,GAAUC,EAAAA,EAAAA,MAChB,GAAwBC,EAAAA,EAAAA,UAAS,GAAE,eACnC,GADW,KAAS,KACIL,EAAAA,SAAe,KAAG,eAC1C,GADW,KAAS,MACcK,EAAAA,EAAAA,UAAS,IAAE,eAC7C,GADgB,KAAc,KACJL,EAAAA,UAAe,IAAM,eAC/C,GADY,KAAU,MACSK,EAAAA,EAAAA,WAAS,IAAM,eAC9C,GADgB,KAAW,MAC6BA,EAAAA,EAAAA,WAAS,IAAM,eAYjEC,GAZqB,KAAyB,KAYhC,WAClBJ,GAAQ,EACV,GAEMzD,EAAU+C,IAEhB,OACE,UAAC,IAAG,CAAC3C,UAAWJ,EAAQgC,QAAQ,WAC9B,SAAC,IAAG,CAAC5B,UAAWJ,EAAQa,kBAAkB,UAExC,SAACiD,EAAA,EAAU,CAACC,QAAQ,KAAK3D,UAAU,cAAa,2CAmBlD,SAAC4D,EAAA,EAAO,CAAC5D,UAAWJ,EAAQ4C,WAE5B,SAAC,IAAG,CAACtC,MAAO,CAAEuC,UAAW,WAIzB,SAACoB,EAAA,EAAc,WACb,UAACC,EAAA,EAAK,YACJ,SAACC,EAAA,EAAS,WACR,UAACb,EAAA,EAAQ,CAAClD,UAAS,UAAKJ,EAAQoE,UAAS,cAAa,WACpD,SAACC,EAAA,EAAS,sBAEV,SAACA,EAAA,EAAS,6BACV,SAACA,EAAA,EAAS,2BAGd,SAACC,EAAA,EAAS,UACPpB,EAASqB,KAAI,SAACC,EAAMC,GAAK,OACxB,UAACrB,EAAc,CAAChD,UAAWJ,EAAQ4B,UAAU,WAC3C,SAACyC,EAAA,EAAS,UAAEI,EAAQ,IAAe,KAYnC,SAACJ,EAAA,EAAS,iCACV,UAACA,EAAA,EAAS,YACR,SAACK,EAAA,EAAc,CACbpE,MAAO,CACLG,SAAU,OACVb,MAAO,UACP+E,OAAQ,WAEVC,QAAS,WACPlB,EAAQmB,KAAK,CACXC,SAAU,aACVC,OAAQ,QAEZ,IACA,YAEF,SAACC,EAAA,EAAQ,CACP1E,MAAO,CACLG,SAAU,OACVkE,OAAQ,UACR/E,MAAM,WAERgF,QAAS,WACPlB,EAAQmB,KAAK,CACXC,SAAU,aACVC,OAAO,QAEX,EACA3E,UAAWJ,EAAQ+B,YACnB,gBAWW,YAezB,+BACA,UAACkD,EAAA,EAAM,CACLzB,KAAMA,EACN0B,WAAS,EACTC,SAAS,KACTC,QAASvB,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0B,WAE3C,SAACwB,EAAA,EAAW,CAACC,MAAM,SAASnC,GAAG,qBAAoB,UAC3C,SAACW,EAAA,EAAU,CAACC,QAAQ,KAAI,sCAIhC,SAACwB,EAAA,EAAa,WACZ,SAACC,EAAA,EAAiB,CAACrC,GAAG,2BAA2BmC,MAAM,SAAQ,UAC7D,UAACxB,EAAA,EAAU,CAACC,QAAQ,KAAI,UACrB,IAAG,8DAKV,UAAC0B,EAAA,EAAa,YACZ,SAAC,IAAM,CAACb,QAASf,EAAaE,QAAQ,YAAYnE,MAAM,YAAW,iBAGnE,SAAC,IAAM,CAACgF,QAASf,EAAaE,QAAQ,YAAYnE,MAAM,UAAS,2BAQ3E,C","sources":["component/ButtonCircularProgress.js","component/DataNotFound.js","component/FilterCard.js","component/TeamTable.js","views/pages/Dashboard/StaticManagement/TeamManagement.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CircularProgress, Box, withStyles } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  circularProgress: {\n    color: \"green\",\n  },\n});\n\nfunction ButtonCircularProgress(props) {\n  const { size, classes } = props;\n  return (\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\n      <CircularProgress\n        size={size ? size : 24}\n        thickness={size ? (size / 5) * 24 : 5}\n        className={classes.circularProgress}\n      />\n    </Box>\n  );\n}\n\nButtonCircularProgress.propTypes = {\n  size: PropTypes.number,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\n","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function DataNotFound(color = \"#fff\") {\n  return (\n    <Box\n      style={{ display: \"flex\", justifyContent: \"center\", paddingTop: \"10px\" }}\n    >\n      <Typography style={{ color: \"black\", fontSize: \"16px\" }}>\n        No data found\n      </Typography>\n    </Box>\n  );\n}\n","import {\n  Box,\n  Container,\n  TableCell,\n  TableContainer,\n  TableHead,\n  Table,\n  Typography,\n  TableBody,\n  TableRow,\n  Grid,\n  IconButton,\n  Avatar,\n  InputAdornment,\n  Button,\n  FormControl,\n  Divider,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { FiCopy } from \"react-icons/fi\";\nimport { toast } from \"react-toastify\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport React, { useState } from \"react\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// import * as XLSX from \"xlsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { BsSearch } from \"react-icons/bs\";\nimport { Delete, GetApp } from \"@material-ui/icons\";\n\nimport { BiCopy } from \"react-icons/bi\";\n\nconst useStyles = makeStyles((theme) => ({\n  deviceSection: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  devicelistHeading: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    \"& h3\": {\n      padding: \"1rem 0\",\n      color: theme.palette.text.black,\n    },\n    \"& .icon1\": {\n      height: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingRight: \"7px\",\n      },\n    },\n    \"& .icon2\": {\n      height: \"20px\",\n      paddingLeft: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  activeparent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  activeDevice: {\n    width: \"10px\",\n    height: \"10px\",\n    background: \"green\",\n    borderRadius: \"100px\",\n  },\n  tableRow1: {\n    \"& td\": {\n      color: theme.palette.text.black,\n    },\n    \"& th\": {\n      color: theme.palette.text.black,\n    },\n  },\n  formControl: {\n    minWidth: \"15vh\",\n    width: \"100%\",\n  },\n  iconcolor: {\n    color: \"#fff\",\n  },\n  mainbox: {\n    // padding: \"16px 0 40px\",\n    paddingTop: \"23px\",\n    \"& .tableHead\": {\n      backgroundColor: \"#FEDDB6\",\n      \"& th\": {\n        color: \"#000\",\n        padding: \"11px\",\n      },\n    },\n  },\n\n  filterBox: {\n    color: \"black\",\n    position: \"relative\",\n    \"& h6\": {\n      position: \"absolute\",\n      top: \"-20px\",\n      background: theme.palette.background.dark1,\n\n      padding: \"5px 10px\",\n      left: \"0px\",\n      fontSize: \"19px\",\n      color: \"#5a86ff\",\n      fontWeight: 600,\n    },\n    \"& input\": {\n      color: theme.palette.text.black,\n    },\n    \"& label\": {\n      color: \"#000\",\n      fontSize: \"14px\",\n      // fontFamily:\"'Roboto',sans-serif\",\n      fontWeight: \"400\",\n    },\n    \"& .iconbtn\": {\n      color: theme.palette.text.black,\n    },\n  },\n  filterLine: {\n    marginRight: \"20px\",\n    width: \"180px\",\n    [theme.breakpoints.only(\"xs\")]: {\n      width: \"145px\",\n    },\n  },\n  inputFeild: {\n    border: \"1px solid #F38500\",\n    padding: \"6px 0px\",\n    color: \"#000\",\n    borderRadius: \"5px\",\n\n    \"& svg\": {\n      color: \"#F38500\",\n      fontSize: \"16px\",\n    },\n  },\n  divider: {\n    marginTop: \"30px\",\n  },\n}));\n\nexport default function (props) {\n  const [selectedDate, setSelectedDate] = React.useState(\n    new Date(\"2014-08-18T21:11:54\")\n  );\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  const [open, setOpen] = React.useState(false);\n  const [toData, setToData] = useState();\n\n  const [fromData, setFromData] = useState();\n\n  const [age, setAge] = useState(\"Active\");\n\n  const history = useHistory();\n  const [search, setSearch] = useState();\n  const [currentvalue, setCurrentValue] = useState(\"Select Category\");\n  const [currentvalue1, setCurrentValue1] = useState(\"Select\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Box>\n      <Box className={classes.filterBox} mb={5}>\n        <Box\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <label>Search </label>\n              <Box style={{ marginTop: \"5px\" }}>\n                <TextField\n                  id=\"outlined-basic\"\n                  type=\"search\"\n                  variant=\"outlined\"\n                  placeholder=\"Search by title\"\n                  fullWidth\n                  onChange={(e) => setSearch(e.target.value)}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          style={{ fontSize: \"20px\", padding: \"0px\" }}\n                          className=\"iconbtn\"\n                        >\n                          <BsSearch\n                            style={{ color: \"#F38500\", fontSize: \"16px\" }}\n                          />\n                        </IconButton>{\" \"}\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <label>Format</label>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Box style={{ marginTop: \"5px\" }}>\n                  <Select\n                    name=\"token\"\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    onChange={(e) => setCurrentValue1(e.target.value)}\n                    value={currentvalue1}\n                    style={{ width: \"100%\" }}\n                  >\n                    <MenuItem value=\"Select\">Select Format</MenuItem>\n                    <MenuItem value=\"Audio\">Audio</MenuItem>\n                    <MenuItem value=\"Photo\">Photo</MenuItem>\n                    <MenuItem value=\"Video\">Video</MenuItem>\n                    <MenuItem value=\"Document\">Document</MenuItem>\n                  </Select>\n                </Box>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <label>Category</label>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Box style={{ marginTop: \"5px\" }}>\n                  <Select\n                    name=\"token\"\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    onChange={(e) => setCurrentValue(e.target.value)}\n                    value={currentvalue}\n                    style={{ width: \"100%\" }}\n                  >\n                    <MenuItem value=\"Select Category\">Select Category</MenuItem>\n                    <MenuItem value=\"Mental Health\">Mental Health</MenuItem>\n                    <MenuItem value=\"Menstrual Health\">\n                      {\" \"}\n                      Menstrual Health\n                    </MenuItem>\n                    <MenuItem value=\"Personal Safety\">Personal Safety</MenuItem>\n                    <MenuItem value=\"Support Service\">Support Service</MenuItem>\n                  </Select>\n                </Box>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <label>From</label>\n              <Box style={{ marginTop: \"5px\" }}>\n                <KeyboardDatePicker\n                  className={classes.inputFeild}\n                  margin=\"normal\"\n                  disableFuture\n                  id=\"date-picker-dialog\"\n                  format=\"YYYY-MM-DD HH:mm\"\n                  value={fromData}\n                  onChange={(date) => setFromData(date)}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\",\n                  }}\n                />\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <label>To</label>\n              <Box style={{ marginTop: \"5px\" }}>\n                <KeyboardDatePicker\n                  className={classes.inputFeild}\n                  margin=\"normal\"\n                  id=\"date-picker-dialog\"\n                  format=\"YYYY-MM-DD HH:mm\"\n                  disableFuture\n                  value={toData}\n                  onChange={(date) => setToData(date)}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\",\n                  }}\n                />\n              </Box>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <label style={{ color: \"transparent\" }}>Status</label>\n              <Box style={{ marginTop: \"5px\" }}>\n                <Button variant=\"contained\" color=\"primary\" fullWidth>\n                  Submit\n                </Button>\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <label style={{ color: \"transparent\" }}>Status</label>\n              <Box style={{ marginTop: \"5px\" }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  style={{ padding: \"5px 5px\" }}\n                >\n                  Reset\n                </Button>\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={3}>\n              <label style={{ color: \"transparent\" }}>Status</label>\n              <Box style={{ marginTop: \"5px\" }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  style={{ padding: \"5px 5px\" }}\n                >\n                  Download CSV\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import {\n    Box,\n    Container,\n    TableCell,\n    TableContainer,\n    TableHead,\n    Table,\n    Typography,\n    TableBody,\n    TableRow,\n    Grid,\n    IconButton,\n    Avatar,\n    InputAdornment,\n    Button,\n    FormControl,\n    Divider,\n    InputLabel,\n    Select,\n  } from \"@material-ui/core\";\n  import {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n  } from \"@material-ui/pickers\";\n  import { FiCopy } from \"react-icons/fi\";\n  import { toast } from \"react-toastify\";\n  import CopyToClipboard from \"react-copy-to-clipboard\";\n  import React, { useState } from \"react\";\n  import VisibilityIcon from \"@material-ui/icons/Visibility\";\n  import { Link, useHistory } from \"react-router-dom\";\n  import Checkbox from \"@material-ui/core/Checkbox\";\n  import { makeStyles } from \"@material-ui/styles\";\n  import TextField from \"@material-ui/core/TextField\";\n  import MenuItem from \"@material-ui/core/MenuItem\";\n  import { BsSearch } from \"react-icons/bs\";\n  import { Delete, GetApp } from \"@material-ui/icons\";\n  \n  import { BiCopy } from \"react-icons/bi\";\n  \n  const useStyles = makeStyles((theme) => ({\n    deviceSection: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  \n    devicelistHeading: {\n      display: \"flex\",\n      justifyContent: \"start\",\n      alignItems: \"center\",\n      \"& h3\": {\n        padding: \"1rem 0\",\n        color: theme.palette.text.black,\n      },\n      \"& .icon1\": {\n        height: \"20px\",\n        paddingRight: \"20px\",\n        [theme.breakpoints.only(\"xs\")]: {\n          width: \"50px\",\n          height: \"8px\",\n          paddingRight: \"7px\",\n        },\n      },\n      \"& .icon2\": {\n        height: \"20px\",\n        paddingLeft: \"20px\",\n        [theme.breakpoints.only(\"xs\")]: {\n          width: \"50px\",\n          height: \"8px\",\n          paddingLeft: \"7px\",\n        },\n      },\n    },\n    activeparent: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    activeDevice: {\n      width: \"10px\",\n      height: \"10px\",\n      background: \"green\",\n      borderRadius: \"100px\",\n    },\n    tableRow1: {\n      \"& td\": {\n        color: theme.palette.text.black,\n      },\n      \"& th\": {\n        color: theme.palette.text.black,\n      },\n    },\n    formControl: {\n      minWidth: \"15vh\",\n      width: \"100%\",\n    },\n    iconcolor: {\n      color: \"#fff\",\n    },\n    mainbox: {\n      // padding: \"16px 0 40px\",\n      paddingTop: \"23px\",\n      \"& .tableHead\": {\n        backgroundColor: \"#1EB808\",\n        \"& th\": {\n          color: \"#fff\",\n          padding: \"11px\",\n        },\n      },\n    },\n    mainbox1: {\n      \"& .tableHead\": {\n        backgroundColor: \"#1EB808\",\n        \"& th\": {\n          color: \"#fff\",\n          padding: \"11px\",\n        },\n      },\n    },\n    filterBox: {\n      color: \"#fff\",\n      position: \"relative\",\n      \"& h6\": {\n        position: \"absolute\",\n        top: \"-20px\",\n        background: theme.palette.background.dark1,\n  \n        padding: \"5px 10px\",\n        left: \"0px\",\n        fontSize: \"19px\",\n        color: \"#5a86ff\",\n        fontWeight: 600,\n      },\n      \"& input\": {\n        color: theme.palette.text.black,\n      },\n      \"& label\": {\n        color: \"#ffffffde\",\n        fontSize: \"14px\",\n        fontWeight: \"400\",\n      },\n      \"& .iconbtn\": {\n        color: theme.palette.text.black,\n      },\n    },\n    inputFeild: {\n      border: \"1px solid #F38500 \",\n      padding: \"6px\",\n      color: \"#fff\",\n      borderRadius: \"5px\",\n      marginTop: \"5px\",\n      \"& svg\": {\n        color: \"#F38500 \",\n        fontSize: \"16px\",\n      },\n    },\n    divider: {\n      marginTop: \"30px\",\n    },\n  }));\n  \n  export default function (props) {\n    const [selectedDate, setSelectedDate] = React.useState(\n      new Date(\"2014-08-18T21:11:54\")\n    );\n  \n    const handleDateChange = (date) => {\n      setSelectedDate(date);\n    };\n    const [open, setOpen] = React.useState(false);\n    const [age, setAge] = useState(\"Active\");\n    const history = useHistory();\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    const classes = useStyles();\n    const handleChange = (event) => {\n      setAge(event.target.value);\n    };\n    return (\n      <Box>\n        <Box className={classes.filterBox} mb={5} mt={4}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6} md={4} lg={2}>\n              <label>Search </label>\n              <Box style={{ marginTop: \"5px\" }}>\n                <TextField\n                  id=\"outlined-basic\"\n                  type=\"search\"\n                  variant=\"outlined\"\n                  placeholder=\"search Here\"\n                  fullWidth\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        {\" \"}\n                        <IconButton\n                          style={{ fontSize: \"20px\", padding: \"0px\" }}\n                          className=\"iconbtn\"\n                        >\n                          <BsSearch\n                            style={{ color: \"#F38500 \", fontSize: \"16px\" }}\n                          />\n                        </IconButton>{\" \"}\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={2}>\n              <label>From</label>\n              <Box>\n                <KeyboardDatePicker\n                  className={classes.inputFeild}\n                  margin=\"normal\"\n                  id=\"date-picker-dialog\"\n                  format=\"YYYY-MM-DD HH:mm\"\n                  value={selectedDate}\n                  onChange={handleDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\",\n                  }}\n                />\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={2}>\n              <label>To</label>\n              <Box>\n                <KeyboardDatePicker\n                  className={classes.inputFeild}\n                  margin=\"normal\"\n                  id=\"date-picker-dialog\"\n                  format=\"YYYY-MM-DD HH:mm\"\n                  value={selectedDate}\n                  onChange={handleDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\",\n                  }}\n                />\n              </Box>\n            </Grid>\n  \n            <Grid item xs={12} sm={6} md={4} lg={2}>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <label>Status</label>\n                <Box mt={1}>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={age}\n                    style={{ width: \"100%\" }}\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"Active\">None</MenuItem>\n                    <MenuItem value={10} selected>\n                      Active\n                    </MenuItem>\n                    <MenuItem value={20}>Blocked</MenuItem>\n                  </Select>\n                </Box>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={2}>\n              <label style={{ color: \"transparent\" }}>Status</label>\n              <Box style={{ marginTop: \"5px\" }}>\n                <Button variant=\"contained\" color=\"primary\" fullWidth>\n                  Reset\n                </Button>\n              </Box>\n            </Grid>\n  \n          </Grid>\n        </Box>\n      </Box>\n    );\n  }\n  ","import {\n  Box,\n  Container,\n  TableCell,\n  TableContainer,\n  TableHead,\n  Table,\n  Typography,\n  TableBody,\n  TableRow,\n  Grid,\n  DialogTitle,\n  Button,\n  IconButton,\n  FormControl,\n  Divider,\n  Select,\n  withStyles\n} from \"@material-ui/core\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { toast } from \"react-toastify\";\nimport { BiBlock } from \"react-icons/bi\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport FilterCard from \"src/component/FilterCard\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\n// import { sortAddress } from \"../../../utils/index\";\nimport { BiCopy } from \"react-icons/bi\";\nimport TeamTable from \"src/component/TeamTable\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport axios from \"axios\";\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\nimport React, { useState, useEffect } from \"react\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\nimport moment from \"moment\";\nimport DataNotFound from \"src/component/DataNotFound\";\nimport { Pagination } from \"@material-ui/lab\";\nconst useStyles = makeStyles((theme) => ({\n  deviceSection: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  devicelistHeading: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexWrap:'wrap',\n    alignItems: \"center\",\n    \"& h3\": {\n      padding: \"1rem 0\",\n      color: theme.palette.text.black,\n    },\n    \"& .icon1\": {\n      height: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingRight: \"7px\",\n      },\n    },\n    \"& .icon2\": {\n      height: \"20px\",\n      paddingLeft: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  activeparent: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  activeDevice: {\n    width: \"10px\",\n    height: \"10px\",\n    background: \"green\",\n    borderRadius: \"100px\",\n  },\n  tableRow1: {\n    \"& td\": {\n      color: theme.palette.text.black,\n    },\n    \"& th\": {\n      color: theme.palette.text.black,\n    },\n  },\n  formControl: {\n    minWidth: \"15vh\",\n  },\n  iconcolor: {\n    color: \"#fff\",\n\n    \"& path\": {},\n  },\n  mainbox: {\n    padding: \"21px 0 40px\",\n    \"& .tableHead\": {\n      backgroundColor: \"#FEDDB6\",\n      \"& th\": {\n        color: \"#000\",\n        fontSize: \"15px\",\n      },\n      \"& h1\": {\n        color: \"#FFFFFF\",\n        fontSize: \"30px\",\n        fontWeight: \"600\",\n        lineHeight: \"80px\",\n      },\n    },\n  },\n  divider: {\n    marginTop: \"10px\",\n    background: \"#F38500\",\n  },\n  filterBox: {\n    color: \"#fff\",\n    padding: \"15px\",\n    position: \"relative\",\n    \"& h6\": {\n      position: \"absolute\",\n      top: \"-20px\",\n      background: theme.palette.background.dark1,\n\n      padding: \"5px 10px\",\n      left: \"0px\",\n      fontSize: \"19px\",\n      color: \"#5a86ff\",\n      fontWeight: 600,\n    },\n    \"& input\": {\n      color: theme.palette.text.black,\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      fontWeight: 600,\n      color: theme.palette.text.black,\n    },\n    \"& .iconbtn\": {\n      color: theme.palette.text.black,\n    },\n  },\n}));\nconst teamData = [\n  {\n    id:1\n  },\n  {\n    id:1\n  },\n  {\n    id:1\n  },\n  {\n    id:1\n  }\n]\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(even)': {\n      backgroundColor: \"#ffdead87\",\n    },\n  },\n}))(TableRow);\nexport default function (props) {\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  const [page, setPage] = useState(1);\n  const [idd1, setidd1] = React.useState([]);\n  const [noOfPages, setNoOfPages] = useState(1);\n  const [open1, setOpen1] = React.useState(false);\n  const [isLoading, setLoader] = useState(false);\n  const [openUserBlockUnblock, setOpenUserBlockUnblick] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n\n  const handleClickOpennew1 = (data) => {\n    setidd1(data);\n    setOpen1(true);\n    console.log(\"kjhaskjdfhkajsd\", data);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.mainbox}>\n      <Box className={classes.devicelistHeading}>\n        \n        <Typography variant=\"h1\" className=\"headingText\">\n          {/* Splash Screen Management */}\n          Tutorial Screen Management\n        </Typography>\n      \n        {/* <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            history.push({\n              pathname: \"/view-team\",\n              search:\"Add\",\n            });\n          }}\n        >\n          Add New Splash\n        </Button> */}\n\n      </Box>\n      <Divider className={classes.divider} />\n      \n      <Box style={{ marginTop: \"70px\" }}>\n        {/* <TeamTable /> */}\n      </Box>\n\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow className={`${classes.tablerow1} tableHead`}>\n              <TableCell>Sr.No.</TableCell>\n              {/* <TableCell>Splash Name</TableCell> */}\n              <TableCell>Tutorial Name</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {teamData.map((data, index) => (\n              <StyledTableRow className={classes.tableRow1}>\n                <TableCell>{index + 1}</TableCell>{\" \"}\n                {/* <TableCell>\n                  <img\n                    src={data.picture}\n                    style={{\n                      width: \"40px\",\n                      height: \"40px\",\n                      borderRadius: \"50%\",\n                      objectFit: \"cover\",\n                    }}\n                  />\n                </TableCell> */}\n                <TableCell>Tutorial Screen 1</TableCell>\n                <TableCell>\n                  <VisibilityIcon\n                    style={{\n                      fontSize: \"20px\",\n                      color: \"#F38500\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => {\n                      history.push({\n                        pathname: \"/view-team\",\n                        search: \"View\",\n                      });\n                    }}\n                  />\n                  &nbsp;&nbsp;\n                  <EditIcon\n                    style={{\n                      fontSize: \"20px\",\n                      cursor: \"pointer\",\n                      color:\"#F38500\"\n                    }}\n                    onClick={() => {\n                      history.push({\n                        pathname: \"/view-team\",\n                        search:\"Edit\",\n                      });\n                    }}\n                    className={classes.iconcolor}\n                  />\n                  &nbsp;&nbsp;\n                    {/* <DeleteIcon\n                      style={{\n                        color: \"#F38500\",\n                        fontSize: \"20px\",\n                        cursor: \"pointer\",\n                      }}\n                      onClick={handleClickOpen}\n                    /> */}\n                </TableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n        {/* {teamData.length === 0 && <DataNotFound />} */}\n      </TableContainer>\n      {/* {teamData && teamData.length !== 0 && (\n        <Box mt={2} display=\"flex\" justifyContent=\"\">\n          <Pagination\n            count={noOfPages}\n            page={page}\n            onChange={(e, v) => setPage(v)}\n          />\n        </Box>\n      )} */}\n      <>\n      <Dialog\n        open={open}\n        fullWidth\n        maxWidth=\"sm\"\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle align=\"center\" id=\"alert-dialog-title\">\n                <Typography variant=\"h2\">\n                Delete Splash Screeen\n                </Typography>\n              </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" align=\"center\">\n            <Typography variant=\"h5\">\n              {\" \"}\n              Are you sure you want to delete this splash screen?\n            </Typography>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"contained\" color=\"secondary\">\n            No\n          </Button>\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </>\n    </Box>\n  );\n}\n"],"names":["withStyles","theme","circularProgress","color","withTheme","props","size","classes","pl","display","thickness","className","DataNotFound","style","justifyContent","paddingTop","fontSize","makeStyles","deviceSection","alignItems","devicelistHeading","padding","palette","text","black","height","paddingRight","breakpoints","only","width","paddingLeft","activeparent","activeDevice","background","borderRadius","tableRow1","formControl","minWidth","iconcolor","mainbox","backgroundColor","filterBox","position","top","dark1","left","fontWeight","filterLine","marginRight","inputFeild","border","divider","marginTop","mainbox1","useStyles","flexWrap","lineHeight","teamData","id","StyledTableRow","root","TableRow","React","open","setOpen","history","useHistory","useState","handleClose","Typography","variant","Divider","TableContainer","Table","TableHead","tablerow1","TableCell","TableBody","map","data","index","Visibility","cursor","onClick","push","pathname","search","Edit","Dialog","fullWidth","maxWidth","onClose","DialogTitle","align","DialogContent","DialogContentText","DialogActions"],"sourceRoot":""}