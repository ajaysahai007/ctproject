{"version":3,"file":"static/js/6095.620134ed.chunk.js","mappings":"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","sources":["utils/index.js","views/pages/Dashboard/Sub Activity management/SubAddViewEdit.js"],"sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport moment from \"moment\";\nexport function sortAddress(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 4)}`;\n  return sortAdd;\n}\n\nexport function sortString(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 10)}`;\n  return sortAdd;\n}\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const convertDateTime = (val) => {\n  var tempDate = new Date(val);\n  const toDateFormat = moment(tempDate).format(\"DD-MMM-yyyy hh:mm a\");\n  return toDateFormat;\n};\n\nexport const getBase64 = (file, cb) => {\n  let reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = function () {\n    cb(reader.result);\n  };\n  reader.onerror = function (err) {\n    console.log(\"Error: \", err);\n  };\n};\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  TextField,\n  FormControl,\n  IconButton,\n  FormHelperText,\n  MenuItem,\n  Select,\n  Container,\n  Divider,\n} from \"@material-ui/core\";\nimport * as yep from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form, Formik } from \"formik\";\nimport { FiUpload } from \"react-icons/fi\";\nimport { addImageHandler, getBase64 } from \"src/utils\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\nimport JoditEditor from \"jodit-react\";\nconst useStyles = makeStyles((theme) => ({\n  NftBreed: {\n    padding: \"23px 0 \",\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\",\n    // margin: \"0 10px\",\n  },\n  main: {\n    border: \"1px solid #F38500\",\n    padding: \"40px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"#FEDDB6\",\n  },\n  divider: {\n    marginTop: \"10px\",\n    background: \"#F38500\",\n  },\n  textField: {\n    maxWidth: \"100%\",\n  },\n\n  image: {\n    cursor: \"pointer\",\n  },\n  upload: {\n    // width: \"150px\",\n    height: \"200px\",\n    margin: \"16px 0\",\n    cursor: \"pointer\",\n    borderRadius: \"20px\",\n    position: \"relative\",\n    \"& img\": {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px solid #F38500\",\n      // borderRadius: \"50%\",\n      objectFit: \"cover\",\n    },\n\n    \"& button\": {\n      position: \"absolute\",\n      border: \"3px solid black\",\n      bottom: 0,\n      right: 0,\n      backgroundColor: \"#fff\",\n      color: \"#000\",\n      fontSize: \"15px\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n        border: \"3px solid black\",\n      },\n      \"& input\": {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        opacity: 0,\n      },\n    },\n  },\n  devicelistHeading: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    \"& h3\": {\n      padding: \"1rem 0\",\n      color: theme.palette.text.black,\n    },\n    \"& .icon1\": {\n      height: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingRight: \"7px\",\n      },\n    },\n    \"& .icon2\": {\n      height: \"20px\",\n      paddingLeft: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  newbtn: {\n    \"@media(max-width:400px)\": {\n      marginTop: \"10px\",\n    },\n  },\n}));\n\nexport default function CreateNFT(userProfileData) {\n  const classes = useStyles();\n  const history = useHistory();\n  const editor = useRef(null);\n  const [base64Img1, setBase64Img1] = useState(\"\");\n  const [imgFile, setImgfile] = useState(\"\");\n  const [profile, setprofile] = useState();\n  const location = useLocation();\n  const [currentvalue, setCurrentValue] = useState(\"Select\");\n  const partnerData = location.state;\n  const idduserdata = partnerData?._id;\n  console.log(\"asdasdadad\", partnerData);\n\n  const imagesec = partnerData?.logo;\n\n  const functionKey = location.search.split(\"?\")[1];\n  console.log(\"Locations key is >>\", functionKey);\n\n  const [base64Img, setBase64Img] = useState(\"\");\n  useEffect(() => {\n    if (imagesec) {\n      setBase64Img(imagesec);\n    }\n  }, [imagesec]);\n  function imageUpload(event) {\n    let base64img = userData.profilepic;\n    let reader = new FileReader();\n    reader.onload = function () {\n      base64img = reader.result;\n      setBase64Img(base64img);\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  }\n  const [userData, setUserData] = useState({\n    coverPic: \"\",\n    profilePic: \"\",\n    profilePic: \"\",\n    coverPic: \"\",\n  });\n  const formInitialValue = {\n    partnerName: partnerData?.partnerName,\n    url: partnerData?.url,\n  };\n\n  const formValidationSchema = yep.object().shape({\n    activityName: yep\n      .string()\n      .required(\" Activity is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\")\n      .matches(\n        /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/,\n        \"Only alphabets and white spaces are allowed for this field number are not. \"\n      ),\n    subActivityName: yep\n      .string()\n      .required(\" Sub Activity is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\")\n      .matches(\n        /^[a-zA-Z]+$/,\n        \"Only alphabets and white spaces are allowed for this field number are not. \"\n      ),\n    desc: yep\n      .string()\n      .required(\" Descritpion is required\")\n      .min(10, \"Please enter at least 10 characters\")\n      .max(350, \"You can enter only 350 characters\"),\n  });\n  return (\n    <Box className={classes.NftBreed}>\n      <Box className={classes.devicelistHeading}>\n        <Typography variant=\"h1\" className=\"headingText\">\n          {`${functionKey} Sub Activity`}\n        </Typography>\n      </Box>\n      <Divider className={classes.divider} />\n      <Container maxWidth=\"md\">\n        <Formik\n          initialValues={formInitialValue}\n          initialStatus={{\n            success: false,\n            successMsg: \"\",\n          }}\n          // onSubmit={handleSubmit}\n          validationSchema={formValidationSchema}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            touched,\n            values,\n            setFieldValue,\n          }) => (\n            <Form onSubmit={handleSubmit}>\n              {console.log(\"Sadqeqacc\", values)}\n              <Box mt={5} mb={2} className={classes.main}>\n                <Grid container spacing={2}>\n                  <Grid item md={12} sm={12} lg={12} xs={12}>\n                    <Box\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        width: \"100%\",\n                      }}\n                    >\n                      <Box>\n                        {functionKey === \"Add\" ? (\n                          <>\n                            <figure className={classes.upload}>\n                              <img\n                                src={base64Img ? base64Img : \"/images/Yoga.png\"}\n                              />\n                              <IconButton>\n                                <FiUpload />\n                                <input\n                                  type=\"file\"\n                                  accept=\"image/*\"\n                                  onChange={imageUpload}\n                                />\n                              </IconButton>\n                            </figure>\n                          </>\n                        ) : functionKey === \"View\" ? (\n                          <figure className={classes.upload}>\n                            <img src=\"/images/Yoga.png\" />\n                          </figure>\n                        ) : (\n                          <figure className={classes.upload}>\n                            <img\n                              src={base64Img ? base64Img : \"/images/Yoga.png\"}\n                            />\n                            <IconButton>\n                              <FiUpload />\n                              <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={imageUpload}\n                              />\n                            </IconButton>\n                          </figure>\n                        )}\n\n                        {/* <figure className={classes.upload}>\n                          <img\n                            src={base64Img ? base64Img : \"/images/t3.jpeg\"}\n                          />\n                          <IconButton>\n                            <FiUpload />\n                            <input\n                              type=\"file\"\n                              accept=\"image/*\"\n                              onChange={imageUpload}\n                            />\n                          </IconButton>\n                        </figure> */}\n                        {functionKey === \"Add\" ? (\n                          <>\n                            <Box className={classes.imgsec}>\n                              <Typography variant=\"h6\" color=\"primary\">\n                                Please select image\n                              </Typography>\n                            </Box>\n                          </>\n                        ) : functionKey === \"View\" ? (\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                              width: \"100%\",\n                            }}\n                          >\n                            <Typography variant=\"h6\" color=\"primary\">\n                              Activity Image\n                            </Typography>\n                          </Box>\n                        ) : (\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                              width: \"100%\",\n                            }}\n                          >\n                            <Typography variant=\"h6\" color=\"primary\">\n                              Please select image\n                            </Typography>\n                          </Box>\n                        )}\n                      </Box>\n                    </Box>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Box mt={2}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Category Name :\n                            </Typography>\n\n                            {functionKey === \"Add\" ? (\n                              <>\n                                <FormControl\n                                  variant=\"outlined\"\n                                  className={classes.formControl}\n                                >\n                                  <Box>\n                                    <Select\n                                      name=\"token\"\n                                      labelId=\"demo-simple-select-outlined-label\"\n                                      id=\"demo-simple-select-outlined\"\n                                      onChange={(e) =>\n                                        setCurrentValue(e.target.value)\n                                      }\n                                      value={currentvalue}\n                                      style={{ width: \"100%\" }}\n                                    >\n                                      <MenuItem value=\"Select\">\n                                        Select Category\n                                      </MenuItem>\n                                      <MenuItem value=\"Mental Health\">\n                                        Mental Health\n                                      </MenuItem>\n                                      <MenuItem value=\"Menstrual Health\">\n                                        {\" \"}\n                                        Menstrual Health\n                                      </MenuItem>\n                                      <MenuItem value=\"Personal Safety\">\n                                        Personal Safety\n                                      </MenuItem>\n                                      <MenuItem value=\"Support Service\">\n                                        Support Service\n                                      </MenuItem>\n                                    </Select>\n                                  </Box>\n                                </FormControl>\n                              </>\n                            ) : functionKey === \"View\" ? (\n                              <Box>\n                                <TextField\n                                  readOnly\n                                  variant=\"outlined\"\n                                  value=\"Mental Health and Well Being\"\n                                  inputProps={{ readOnly: \"true\" }}\n                                />\n                              </Box>\n                            ) : (\n                              <Box>\n                                <FormControl\n                                  variant=\"outlined\"\n                                  className={classes.formControl}\n                                >\n                                  <Box>\n                                    <Select\n                                      name=\"token\"\n                                      labelId=\"demo-simple-select-outlined-label\"\n                                      id=\"demo-simple-select-outlined\"\n                                      onChange={(e) =>\n                                        setCurrentValue(e.target.value)\n                                      }\n                                      value={currentvalue}\n                                      style={{ width: \"100%\" }}\n                                    >\n                                      <MenuItem value=\"Select\">\n                                        Select Category\n                                      </MenuItem>\n                                      <MenuItem value=\"Mental Health\">\n                                        Mental Health\n                                      </MenuItem>\n                                      <MenuItem value=\"Menstrual Health\">\n                                        {\" \"}\n                                        Menstrual Health\n                                      </MenuItem>\n                                      <MenuItem value=\"Personal Safety\">\n                                        Personal Safety\n                                      </MenuItem>\n                                      <MenuItem value=\"Support Service\">\n                                        Support Service\n                                      </MenuItem>\n                                    </Select>\n                                  </Box>\n                                </FormControl>\n                              </Box>\n                            )}\n                          </Box>\n                        </FormControl>\n                      </form>\n                    </Box>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Box mt={2}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Activity Name :\n                            </Typography>\n\n                            {functionKey === \"Add\" ? (\n                              <>\n                                <Box>\n                                  <TextField\n                                    variant=\"outlined\"\n                                    name=\"activityName\"\n                                    type=\"text\"\n                                    value={values.activityName}\n                                    error={Boolean(\n                                      touched.activityName &&\n                                        errors.activityName\n                                    )}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    placeholder=\"Please enter activity name\"\n                                    className={classes.textField}\n                                  />\n                                  <FormHelperText\n                                    error\n                                    style={{\n                                      margin: \"0px\",\n                                      fontSize: \"12px\",\n                                    }}\n                                  >\n                                    {touched.activityName &&\n                                      errors.activityName}\n                                  </FormHelperText>\n                                </Box>\n                              </>\n                            ) : functionKey === \"View\" ? (\n                              <Box>\n                                <TextField\n                                  readOnly\n                                  variant=\"outlined\"\n                                  value=\"Mental Health and Well Being\"\n                                  inputProps={{ readOnly: \"true\" }}\n                                />\n                              </Box>\n                            ) : (\n                              <Box>\n                                <TextField\n                                  variant=\"outlined\"\n                                  name=\"activityName\"\n                                  type=\"text\"\n                                  // value={values.activityName}\n                                  error={Boolean(\n                                    touched.activityName && errors.activityName\n                                  )}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  placeholder=\"Please enter activity name\"\n                                  className={classes.textField}\n                                />\n                                <FormHelperText\n                                  error\n                                  style={{\n                                    margin: \"0px\",\n                                    fontSize: \"12px\",\n                                  }}\n                                >\n                                  {touched.activityName && errors.activityName}\n                                </FormHelperText>\n                              </Box>\n                            )}\n                          </Box>\n                        </FormControl>\n                      </form>\n                    </Box>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Box mt={1}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Sub-Activity Name :\n                            </Typography>\n\n                            {functionKey === \"Add\" ? (\n                              <>\n                                <Box>\n                                  <TextField\n                                    variant=\"outlined\"\n                                    name=\"subActivityName\"\n                                    type=\"text\"\n                                    value={values.subActivityName}\n                                    error={Boolean(\n                                      touched.subActivityName &&\n                                        errors.subActivityName\n                                    )}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    placeholder=\"Please enter sub-activity name\"\n                                    className={classes.textField}\n                                  />\n                                  <FormHelperText\n                                    error\n                                    style={{\n                                      margin: \"0px\",\n                                      fontSize: \"12px\",\n                                    }}\n                                  >\n                                    {touched.subActivityName &&\n                                      errors.subActivityName}\n                                  </FormHelperText>\n                                </Box>\n                              </>\n                            ) : functionKey === \"View\" ? (\n                              <Box>\n                                <TextField\n                                  readOnly\n                                  variant=\"outlined\"\n                                  value=\"Mental Health and Well Being\"\n                                  inputProps={{ readOnly: \"true\" }}\n                                />\n                              </Box>\n                            ) : (\n                              <Box>\n                                <TextField\n                                  variant=\"outlined\"\n                                  name=\"subActivityName\"\n                                  type=\"text\"\n                                  // value={values.subActivityName}\n                                  error={Boolean(\n                                    touched.subActivityName &&\n                                      errors.subActivityName\n                                  )}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  placeholder=\"Please enter sub-activity name\"\n                                  className={classes.textField}\n                                />\n                                <FormHelperText\n                                  error\n                                  style={{\n                                    margin: \"0px\",\n                                    fontSize: \"12px\",\n                                  }}\n                                >\n                                  {touched.subActivityName &&\n                                    errors.subActivityName}\n                                </FormHelperText>\n                              </Box>\n                            )}\n                          </Box>\n                        </FormControl>\n                      </form>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12} lg={12}>\n                    <Box mt={2}>\n                      <Typography\n                        variant=\"h5\"\n                        color=\"primary\"\n                        style={{ paddingBottom: \"8px\" }}\n                      >\n                        Activity Description :\n                      </Typography>\n                      {functionKey === \"Add\" ? (\n                        <>\n                          {/* <TextField\n                                    variant=\"outlined\"\n                                    name=\"desc\"\n                                    error={Boolean(touched.desc && errors.desc)}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    multiline\n                                    rows={4}\n                                    value={values.desc}\n                                    placeholder=\"Enter Category Description\"\n                                    className={classes.textField}\n                                  /> */}\n                          <Box>\n                            <JoditEditor\n                              ref={editor}\n                              // value={description}\n                              // config={config}\n                              tabIndex={1} // tabIndex of textarea\n                              // onBlur={(e) => setDescription(e)}\n                              onChange={(newContent) => {}}\n                            />\n                          </Box>\n                          <FormHelperText\n                            error\n                            style={{ margin: \"0px\", fontSize: \"12px\" }}\n                          >\n                            {touched.desc && errors.desc}\n                          </FormHelperText>\n                        </>\n                      ) : functionKey === \"View\" ? (\n                        <TextField\n                          variant=\"outlined\"\n                          inputProps={{ readOnly: \"true\" }}\n                          fullWidth\n                          aria-readonly\n                          value=\"Mental health refers to cognitive, behavioral, and emotional well-being. It is all about how people think, feel, and behave.\"\n                          // value={viewMediaData.description}\n                          placeholder=\"Lorem Ipsum is simply dummy text of Lorem Ipsum is simply dummy text ofLorem Ipsum is simply dummy text ofLorem Ipsum is simply dummy text of\"\n                          className={classes.textField}\n                          multiline\n                          rows={4}\n                        />\n                      ) : (\n                        <>\n                          {/* <TextField\n                                    variant=\"outlined\"\n                                    name=\"desc\"\n                                    error={Boolean(touched.desc && errors.desc)}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.desc}\n                                    placeholder=\"Enter category desc\"\n                                    className={classes.textField}\n                                    multiline\n                                    rows={4}\n                                    \n                                  /> */}\n                          <Box>\n                            <JoditEditor\n                              ref={editor}\n                              // value={description}\n                              // config={config}\n                              tabIndex={1} // tabIndex of textarea\n                              // onBlur={(e) => setDescription(e)}\n                              onChange={(newContent) => {}}\n                            />\n                          </Box>\n                          <FormHelperText\n                            error\n                            style={{ margin: \"0px\", fontSize: \"12px\" }}\n                          >\n                            {touched.desc && errors.desc}\n                          </FormHelperText>\n                        </>\n                      )}\n                    </Box>\n                  </Grid>\n                </Grid>\n                <Box\n                  style={{\n                    marginTop: \"25px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \" center\",\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => history.push(\"/sub-activityMgmt\")}\n                    className={classes.newbtn}\n                  >\n                    Cancel\n                  </Button>\n                  &nbsp;&nbsp;\n                  {functionKey === \"Add\" ? (\n                    <>\n                      <Box>\n                        <Button\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                        >\n                          Submit\n                        </Button>\n                      </Box>\n                    </>\n                  ) : functionKey === \"View\" ? (\n                    <>\n                      <Box>\n                        <Button\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                          onClick={() =>\n                            history.push({\n                              pathname: \"/subActivityView\",\n                              search: \"Edit\",\n                            })\n                          }\n                        >\n                          Edit\n                        </Button>\n                      </Box>\n                    </>\n                  ) : (\n                    <Box>\n                      <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                        Update\n                      </Button>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n}\n"],"names":["sortAddress","add","slice","length","convertDateTime","val","tempDate","Date","moment","format","useStyles","makeStyles","theme","NftBreed","padding","formControl","minWidth","width","main","border","borderRadius","backgroundColor","divider","marginTop","background","textField","maxWidth","image","cursor","upload","height","margin","position","objectFit","bottom","right","color","fontSize","top","left","opacity","devicelistHeading","display","justifyContent","alignItems","palette","text","black","paddingRight","breakpoints","only","paddingLeft","newbtn","CreateNFT","userProfileData","classes","history","useHistory","editor","useRef","useState","location","useLocation","currentvalue","setCurrentValue","partnerData","state","_id","console","log","imagesec","logo","functionKey","search","split","base64Img","setBase64Img","imageUpload","event","base64img","userData","profilepic","reader","FileReader","onload","result","readAsDataURL","target","files","useEffect","coverPic","profilePic","formInitialValue","partnerName","url","formValidationSchema","yep","shape","activityName","required","min","max","matches","subActivityName","desc","className","variant","initialValues","initialStatus","success","successMsg","validationSchema","errors","handleBlur","handleChange","handleSubmit","touched","values","setFieldValue","onSubmit","mt","mb","container","spacing","item","md","sm","lg","xs","style","src","type","accept","onChange","imgsec","autoComplete","paddingBottom","name","labelId","id","e","value","readOnly","inputProps","error","Boolean","onBlur","placeholder","ref","tabIndex","newContent","fullWidth","multiline","rows","flexWrap","onClick","push","pathname"],"sourceRoot":""}