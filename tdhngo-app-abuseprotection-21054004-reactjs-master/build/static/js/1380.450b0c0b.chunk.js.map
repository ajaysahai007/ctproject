{"version":3,"file":"static/js/1380.450b0c0b.chunk.js","mappings":"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","sources":["utils/index.js","views/pages/Dashboard/Banner Management/AddViewEdit.js"],"sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport moment from \"moment\";\nexport function sortAddress(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 4)}`;\n  return sortAdd;\n}\n\nexport function sortString(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 10)}`;\n  return sortAdd;\n}\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const convertDateTime = (val) => {\n  var tempDate = new Date(val);\n  const toDateFormat = moment(tempDate).format(\"DD-MMM-yyyy hh:mm a\");\n  return toDateFormat;\n};\n\nexport const getBase64 = (file, cb) => {\n  let reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = function () {\n    cb(reader.result);\n  };\n  reader.onerror = function (err) {\n    console.log(\"Error: \", err);\n  };\n};\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  TextField,\n  FormControl,\n  IconButton,\n  FormHelperText,\n  MenuItem,\n  Select,\n  Container,\n  Divider,\n} from \"@material-ui/core\";\nimport * as yep from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form, Formik } from \"formik\";\nimport { FiUpload } from \"react-icons/fi\";\nimport { addImageHandler, getBase64 } from \"src/utils\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { convertDateTime } from \"src/utils/index\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\nimport JoditEditor from \"jodit-react\";\nimport PageLoading from \"src/component/PageLoading\";\nconst useStyles = makeStyles((theme) => ({\n  NftBreed: {\n    padding: \"23px 0 \",\n  },\n  dengerousClass: {\n    border: \"1px solid #f38500\",\n    padding: \"0px 10px\",\n    color: \"black\",\n    borderRadius: \"5px\",\n    height: \"50px\",\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\",\n    // margin: \"0 10px\",\n  },\n  main: {\n    border: \"1px solid #F38500\",\n    padding: \"40px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"#FEDDB6\",\n  },\n  divider: {\n    marginTop: \"10px\",\n    background: \"#F38500\",\n  },\n  textField: {\n    maxWidth: \"100%\",\n  },\n\n  image: {\n    cursor: \"pointer\",\n  },\n  upload: {\n    // width: \"150px\",\n    // height: \"150px\",\n    height: \"250px\",\n    margin: \"16px 0\",\n    cursor: \"pointer\",\n    borderRadius: \"20px\",\n    position: \"relative\",\n    \"& img\": {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px solid #F38500\",\n      // borderRadius: \"50%\",\n      objectFit: \"cover\",\n    },\n\n    \"& button\": {\n      position: \"absolute\",\n      border: \"3px solid black\",\n      bottom: 0,\n      right: 0,\n      backgroundColor: \"#fff\",\n      color: \"#000\",\n      fontSize: \"15px\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n        border: \"3px solid black\",\n      },\n      \"& input\": {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        opacity: 0,\n      },\n    },\n  },\n  devicelistHeading: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    \"& h3\": {\n      padding: \"1rem 0\",\n      color: theme.palette.text.black,\n    },\n    \"& .icon1\": {\n      height: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingRight: \"7px\",\n      },\n    },\n    \"& .icon2\": {\n      height: \"20px\",\n      paddingLeft: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  newbtn: {\n    \"@media(max-width:400px)\": {\n      marginTop: \"10px\",\n    },\n  },\n}));\n\nexport default function CreateNFT(userProfileData) {\n  const classes = useStyles();\n  const history = useHistory();\n  const editor = useRef(null);\n  const [_isloading, setLoading] = useState(false);\n  const location = useLocation();\n  const [_imgDef, setImgDef] = useState(\"\");\n  const [_description, setDescription] = useState(\"\");\n  const partnerData = location.state;\n  const idduserdata = partnerData?.id;\n  const [_imageurl, setFile] = useState(null);\n  const [_imgaeset, setImageSet] = useState(\"\");\n\n  console.log(\"_imageurl--->>\", _imgaeset);\n  const [_viewbannerdata, setViewBannerData] = useState();\n  const imagesec = partnerData?.logo;\n  const functionKey = location.search.split(\"?\")[1];\n  // const [_imgDef, setImgDef] = useState(\"\");\n\n  const [base64Img, setBase64Img] = useState(\"\");\n  useEffect(() => {\n    if (imagesec) {\n      setBase64Img(imagesec);\n    }\n  }, [imagesec]);\n  function imageUpload(event) {\n    let base64img = userData.profilepic;\n    let reader = new FileReader();\n    reader.onload = function () {\n      base64img = reader.result;\n      setBase64Img(base64img);\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  }\n  const [userData, setUserData] = useState({\n    coverPic: \"\",\n    profilePic: \"\",\n    profilePic: \"\",\n    coverPic: \"\",\n  });\n  const formInitialValue = {\n    title: \"\",\n    _imageurl: \"\",\n    // description: \"\",\n  };\n  const [_initalstate, setInialState] = useState(formInitialValue);\n\n  const formValidationSchema = yep.object().shape({\n    title: yep\n      .string()\n      .required(\"title name is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\"),\n    // description: yep\n    //   .string()\n    //   .required(\"Description name is required\")\n    //   .min(2, \"Please enter at least 2 characters\")\n    //   .max(35, \"You can enter only 35 characters\"),\n  });\n  const [_useraddress, setUrlAddress] = useState();\n  const [_method, setMethod] = useState(\"\");\n  console.log(\n    \"_useraddress-->\",\n    _useraddress,\n    \"_useraddress-->>\",\n    _useraddress\n  );\n  const URLFunction = () => {\n    if (functionKey === \"Add\") {\n      return apiConfig.addBanner;\n    } else {\n      return apiConfig.editBanner;\n    }\n  };\n  // ADD AND EDIT BANNER MANAGEMENT\n  const AddBannerSubmit = async (values) => {\n    setLoading(true);\n    let URLKey = URLFunction();\n    try {\n      const formdata = new FormData();\n      formdata.append(\"title\", values.title);\n      formdata.append(\"description\", values.description);\n\n      formdata.append(\"image\", _imageurl === null ? _imgaeset : _imageurl);\n      formdata.append(\"bannerId\", idduserdata);\n\n      const res = await axios({\n        url: URLKey,\n        method: functionKey === \"Add\" ? \"POST\" : \"PUT\",\n        headers: {\n          token: window.sessionStorage.getItem(\"token\"),\n        },\n        data: formdata,\n      });\n      if (res) {\n        setLoading(false);\n\n        console.log(res);\n        history.push(\"/bannerMgmt\");\n      }\n    } catch (error) {\n      setLoading(false);\n\n      console.log(\"error\", error);\n    }\n  };\n  //VIEW BANEER MANAGEMENT\n  const token = window.sessionStorage.getItem(\"token\");\n  const ViewBannerFunction = async () => {\n    try {\n      setLoading(true);\n      const res = await axios({\n        url: apiConfig.viewBanner,\n        headers: {\n          token: token,\n        },\n        params: {\n          bannerId: idduserdata,\n        },\n      });\n      if (res) {\n        setLoading(false);\n\n        console.log(\"res=====>>\", res);\n        setViewBannerData(res?.data?.result);\n        const formInitialValue = {\n          title: res?.data?.result?.title,\n          _imageurl: res?.data?.result?.image,\n          // description: res?.data?.result?.description,\n        };\n        setImageSet(res?.data?.result?.image);\n        // setImgDef(res?.data?.result?.image);\n\n        setInialState(formInitialValue);\n        // setDescription(res?.data?.result?.description);\n      }\n    } catch (error) {\n      setLoading(false);\n\n      console.log(\"error=====>>\", error);\n    }\n  };\n\n  useEffect(() => {\n    ViewBannerFunction();\n  }, [idduserdata]);\n  return (\n    <Box className={classes.NftBreed}>\n      {_isloading ? <PageLoading /> : \"\"}\n      <Box className={classes.devicelistHeading}>\n        <Typography variant=\"h1\" className=\"headingText\">\n          {`${functionKey} Banner`}\n        </Typography>\n      </Box>\n      <Divider className={classes.divider} />\n      <Container maxWidth=\"md\">\n        <Formik\n          initialValues={_initalstate}\n          enableReinitialize={true}\n          initialStatus={{\n            success: false,\n            successMsg: \"\",\n          }}\n          onSubmit={(values) => AddBannerSubmit(values)}\n          validationSchema={formValidationSchema}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            touched,\n            values,\n            setFieldValue,\n          }) => (\n            <Form onSubmit={handleSubmit}>\n              {console.log(\"Sadqeqacc\", values)}\n              <Box mt={5} mb={2} className={classes.main}>\n                <Grid container spacing={2}>\n                  <Grid item md={12} sm={12} lg={12} xs={12}>\n                    <Box\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        width: \"100%\",\n                      }}\n                    >\n                      <Box>\n                        {functionKey === \"Add\" ? (\n                          <>\n                            <figure className={classes.upload}>\n                              <img\n                                src={_imgDef ? _imgDef : \"/images/plusIcon.png\"}\n                              />\n                              <IconButton>\n                                <FiUpload />\n                                <input\n                                  type=\"file\"\n                                  accept=\"image/*\"\n                                  onChange={(e) => {\n                                    setFile(e.target.files[0]);\n                                    setImgDef(\n                                      URL.createObjectURL(e.target.files[0])\n                                    );\n                                  }}\n                                />\n                              </IconButton>\n                            </figure>\n                          </>\n                        ) : functionKey === \"View\" ? (\n                          <figure className={classes.upload}>\n                            <img src={_viewbannerdata?.image} />\n                          </figure>\n                        ) : (\n                          <figure className={classes.upload}>\n                            <img src={_imgDef ? _imgDef : _imgaeset} />\n                            <IconButton>\n                              <FiUpload />\n                              <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={(e) => {\n                                  setFile(e.target.files[0]);\n                                  setImgDef(\n                                    URL.createObjectURL(e.target.files[0])\n                                  );\n                                }}\n                              />\n                            </IconButton>\n                          </figure>\n                        )}\n\n                        {functionKey === \"Add\" ? (\n                          <>\n                            <Box className={classes.imgsec}>\n                              <Typography variant=\"h6\" color=\"primary\">\n                                Please select image\n                              </Typography>\n                            </Box>\n                          </>\n                        ) : functionKey === \"View\" ? (\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                              width: \"100%\",\n                            }}\n                          >\n                            <Typography variant=\"h6\" color=\"primary\">\n                              Image\n                            </Typography>\n                          </Box>\n                        ) : (\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                              width: \"100%\",\n                            }}\n                          >\n                            <Typography variant=\"h6\" color=\"primary\">\n                              Please select image\n                            </Typography>\n                          </Box>\n                        )}\n                      </Box>\n                    </Box>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Box mt={2}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Title\n                            </Typography>\n\n                            {functionKey === \"Add\" ? (\n                              <>\n                                <Box>\n                                  <TextField\n                                    variant=\"outlined\"\n                                    name=\"title\"\n                                    type=\"text\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.title}\n                                    placeholder=\"Please enter title\"\n                                    error={Boolean(\n                                      touched.title && errors.title\n                                    )}\n                                    className={classes.textField}\n                                  />\n                                  <FormHelperText\n                                    error\n                                    style={{\n                                      margin: \"0px\",\n                                      fontSize: \"12px\",\n                                    }}\n                                  >\n                                    {touched.title && errors.title}\n                                  </FormHelperText>\n                                </Box>\n                                {/* <Box>\n                                  <Box mt={2}>\n                                    <Typography\n                                      variant=\"h5\"\n                                      color=\"primary\"\n                                      style={{ paddingBottom: \"8px\" }}\n                                    >\n                                      Description\n                                    </Typography>\n                                  </Box>\n                                  <TextField\n                                    variant=\"outlined\"\n                                    name=\"description\"\n                                    type=\"text\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.description}\n                                    error={Boolean(\n                                      touched.description && errors.description\n                                    )}\n                                    placeholder=\"Please enter category name\"\n                                    className={classes.textField}\n                                  />\n\n                                  <FormHelperText\n                                    error\n                                    style={{\n                                      margin: \"0px\",\n                                      fontSize: \"12px\",\n                                    }}\n                                  >\n                                    {touched.description && errors.description}\n                                  </FormHelperText>\n                                </Box> */}\n                                {/* <Box>\n                                  <TextField\n                                    variant=\"outlined\"\n                                    name=\"position\"\n                                    type=\"number\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.position}\n                                    placeholder=\"Please enter position value\"\n                                    error={Boolean(\n                                      touched.position && errors.position\n                                    )}\n                                    className={classes.textField}\n                                  />\n                                  <FormHelperText\n                                    error\n                                    style={{\n                                      margin: \"0px\",\n                                      fontSize: \"12px\",\n                                    }}\n                                  >\n                                    {touched.position && errors.position}\n                                  </FormHelperText>\n                                </Box>\n                                <Box>\n                                  <TextField\n                                    variant=\"outlined\"\n                                    name=\"position\"\n                                    type=\"number\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.position}\n                                    placeholder=\"Please enter position value\"\n                                    error={Boolean(\n                                      touched.position && errors.position\n                                    )}\n                                    className={classes.textField}\n                                  />\n                                  <FormHelperText\n                                    error\n                                    style={{\n                                      margin: \"0px\",\n                                      fontSize: \"12px\",\n                                    }}\n                                  >\n                                    {touched.position && errors.position}\n                                  </FormHelperText>\n                                </Box> */}\n                              </>\n                            ) : functionKey === \"View\" ? (\n                              <Box>\n                                <TextField\n                                  readOnly\n                                  variant=\"outlined\"\n                                  value={_viewbannerdata?.title}\n                                  inputProps={{ readOnly: \"true\" }}\n                                />\n                              </Box>\n                            ) : (\n                              <>\n                                <Box>\n                                  {console.log(\n                                    \"_initalstate111...>>>\",\n                                    _initalstate\n                                  )}\n                                  <TextField\n                                    variant=\"outlined\"\n                                    name=\"title\"\n                                    type=\"text\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.title}\n                                    error={Boolean(\n                                      touched.title && errors.title\n                                    )}\n                                    // onBlur={handleBlur}\n                                    // onChange={handleChange}\n                                    placeholder=\"Please enter title\"\n                                    className={classes.textField}\n                                  />\n                                  <FormHelperText\n                                    error\n                                    style={{\n                                      margin: \"0px\",\n                                      fontSize: \"12px\",\n                                    }}\n                                  >\n                                    {touched.title && errors.title}\n                                  </FormHelperText>\n                                </Box>\n                                {/* <Box mt={2}>\n                                  <Typography\n                                    variant=\"h5\"\n                                    color=\"primary\"\n                                    style={{ paddingBottom: \"8px\" }}\n                                  >\n                                    Description\n                                  </Typography>\n                                </Box>\n                                <TextField\n                                  variant=\"outlined\"\n                                  name=\"description\"\n                                  type=\"text\"\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  value={values.description}\n                                  error={Boolean(\n                                    touched.description && errors.description\n                                  )}\n                                  multiline\n                                  maxRows={4}\n                                  placeholder=\"Please enter description\"\n                                  className={classes.textField}\n                                />\n                                <FormHelperText\n                                  error\n                                  style={{\n                                    margin: \"0px\",\n                                    fontSize: \"12px\",\n                                  }}\n                                >\n                                  {touched.description && errors.description}\n                                </FormHelperText> */}\n                              </>\n                            )}\n                          </Box>\n                        </FormControl>\n                      </form>\n                    </Box>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <Grid container spacing={2} className=\"BreedDetails\">\n                          <FormControl\n                            variant=\"outlined\"\n                            className={classes.formControl}\n                          >\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\n                              <Box mt={1}>\n                                {/* {functionKey === \"View\" ? (\n                                  <Typography\n                                    variant=\"h5\"\n                                    color=\"primary\"\n                                    style={{ paddingBottom: \"8px\" }}\n                                  >\n                                    Description\n                                  </Typography>\n                                ) : (\n                                  \"\"\n                                )} */}\n\n                                {functionKey === \"View\" ? (\n                                  <>\n                                    {/* <Box>\n                                      <Typography\n                                        className={classes.dengerousClass}\n                                      >\n                                        <div\n                                          className={classes.dengerous_typo}\n                                          dangerouslySetInnerHTML={{\n                                            __html:\n                                              _viewbannerdata?.description,\n                                          }}\n                                        ></div>\n                                      </Typography>\n                                    </Box> */}\n\n                                    <Box mt={2}>\n                                      <Typography\n                                        variant=\"h5\"\n                                        color=\"primary\"\n                                        style={{ paddingBottom: \"8px\" }}\n                                      >\n                                        Created Date and Time :\n                                      </Typography>\n                                      <TextField\n                                        readOnly\n                                        variant=\"outlined\"\n                                        value={convertDateTime(\n                                          _viewbannerdata?.createdAt\n                                        )}\n                                        inputProps={{ readOnly: \"true\" }}\n                                      />\n                                    </Box>\n                                  </>\n                                ) : (\n                                  \"\"\n                                )}\n                              </Box>\n                            </Grid>\n                          </FormControl>\n                        </Grid>\n                      </form>\n                    </Box>\n                  </Grid>\n                </Grid>\n                <Box\n                  style={{\n                    marginTop: \"25px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \" center\",\n                  }}\n                >\n                  {functionKey === \"View\" ? (\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => history.push(\"/bannerMgmt\")}\n                      className={classes.newbtn}\n                    >\n                      Back\n                    </Button>\n                  ) : (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => history.push(\"/bannerMgmt\")}\n                      className={classes.newbtn}\n                    >\n                      Cancel\n                    </Button>\n                  )}\n                  &nbsp;&nbsp;\n                  {functionKey === \"Add\" ? (\n                    <>\n                      <Box>\n                        <Button\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                        >\n                          Submit\n                        </Button>\n                      </Box>\n                    </>\n                  ) : functionKey === \"View\" ? (\n                    <>\n                      {/* <Box>\n                        <Button\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                          onClick={() =>\n                            history.push({\n                              pathname: \"/bannerView\",\n                              search: \"Edit\",\n                            })\n                          }\n                        >\n                          Edit\n                        </Button>\n                      </Box> */}\n                    </>\n                  ) : (\n                    <Box>\n                      <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                        Update\n                      </Button>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n}\n"],"names":["sortAddress","add","slice","length","convertDateTime","val","tempDate","Date","moment","format","useStyles","makeStyles","theme","NftBreed","padding","dengerousClass","border","color","borderRadius","height","formControl","minWidth","width","main","backgroundColor","divider","marginTop","background","textField","maxWidth","image","cursor","upload","margin","position","objectFit","bottom","right","fontSize","top","left","opacity","devicelistHeading","display","justifyContent","alignItems","palette","text","black","paddingRight","breakpoints","only","paddingLeft","newbtn","CreateNFT","userProfileData","classes","history","useHistory","useRef","useState","_isloading","setLoading","location","useLocation","_imgDef","setImgDef","partnerData","state","idduserdata","id","_imageurl","setFile","_imgaeset","setImageSet","console","log","_viewbannerdata","setViewBannerData","imagesec","logo","functionKey","search","split","setBase64Img","useEffect","coverPic","profilePic","title","_initalstate","setInialState","formValidationSchema","yep","shape","required","min","max","_useraddress","AddBannerSubmit","values","URLKey","apiConfig","formdata","FormData","append","description","axios","url","method","headers","token","window","sessionStorage","getItem","data","res","push","ViewBannerFunction","params","bannerId","result","formInitialValue","className","variant","initialValues","enableReinitialize","initialStatus","success","successMsg","onSubmit","validationSchema","errors","handleBlur","handleChange","handleSubmit","touched","setFieldValue","mt","mb","container","spacing","item","md","sm","lg","xs","style","src","type","accept","onChange","e","target","files","URL","createObjectURL","imgsec","autoComplete","paddingBottom","name","onBlur","value","placeholder","error","Boolean","readOnly","inputProps","createdAt","flexWrap","onClick"],"sourceRoot":""}