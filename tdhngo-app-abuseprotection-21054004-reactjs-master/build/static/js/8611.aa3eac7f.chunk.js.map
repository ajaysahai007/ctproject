{"version":3,"file":"static/js/8611.aa3eac7f.chunk.js","mappings":"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","sources":["utils/index.js","views/pages/Dashboard/StaticManagement/AddFAQ.js"],"sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport moment from \"moment\";\nexport function sortAddress(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 4)}`;\n  return sortAdd;\n}\n\nexport function sortString(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 10)}`;\n  return sortAdd;\n}\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const convertDateTime = (val) => {\n  var tempDate = new Date(val);\n  const toDateFormat = moment(tempDate).format(\"DD-MMM-yyyy hh:mm a\");\n  return toDateFormat;\n};\n\nexport const getBase64 = (file, cb) => {\n  let reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = function () {\n    cb(reader.result);\n  };\n  reader.onerror = function (err) {\n    console.log(\"Error: \", err);\n  };\n};\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  TextField,\n  FormControl,\n  IconButton,\n  FormHelperText,\n  MenuItem,\n  Select,\n  Container,\n  Divider,\n} from \"@material-ui/core\";\nimport JoditEditor from \"jodit-react\";\nimport Button from \"@material-ui/core/Button\";\nimport { FiUpload } from \"react-icons/fi\";\nimport { addImageHandler, getBase64 } from \"src/utils\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\n\nconst useStyles = makeStyles((theme) => ({\n  NftBreed: {\n    padding: \"23px 0 \",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\",\n    margin: \"0 10px\",\n  },\n  main: {\n    border: \"1px solid #F38500\",\n    padding: \"40px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"#FEDDB6\",\n  },\n  divider: {\n    marginTop: \"30px\",\n  },\n  textField: {\n    maxWidth: \"100%\",\n  },\n\n  image: {\n    // display: \"flex\",\n    // justifyContent: \"center\",\n    cursor: \"pointer\",\n  },\n  upload: {\n    width: \"150px\",\n    height: \"150px\",\n    margin: \"16px 0\",\n    cursor: \"pointer\",\n    borderRadius: \"20px\",\n    position: \"relative\",\n    \"& img\": {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px solid #01FBB4\",\n      borderRadius: \"50%\",\n      objectFit: \"cover\",\n    },\n\n    \"& button\": {\n      position: \"absolute\",\n      border: \"3px solid black\",\n      bottom: 0,\n      right: 0,\n      backgroundColor: \"#fff\",\n      color: \"#000\",\n      fontSize: \"15px\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n        border: \"3px solid black\",\n      },\n      \"& input\": {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        opacity: 0,\n      },\n    },\n  },\n  devicelistHeading: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    \"& h3\": {\n      padding: \"1rem 0\",\n      color: theme.palette.text.black,\n    },\n    \"& .icon1\": {\n      height: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingRight: \"7px\",\n      },\n    },\n    \"& .icon2\": {\n      height: \"20px\",\n      paddingLeft: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  divider: {\n    marginTop: \"10px\",\n    background: \"#F38500\",\n  },\n  newbtn: {\n    \"@media(max-width:400px)\": {\n      marginTop: \"10px\",\n    },\n  },\n}));\n\nexport default function CreateNFT(userProfileData) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [isLoadin, setIsLoading] = useState(false);\n  const config = {\n    readonly: false,\n  };\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const editor = useRef(null);\n\n  const FormHandleSubmit = async (values) => {\n    setIsLoading(true);\n    try {\n      const res = await axios({\n        method: \"POST\",\n        url: apiConfig.faq,\n        headers: {\n          token: window.sessionStorage.getItem(\"token\"),\n        },\n        data: {\n          question: question,\n          answer: answer,\n        },\n      });\n      if (res.data.statusCode === 200) {\n        setIsLoading(false);\n        toast.success(\"FAQ Added Successfully!\");\n        history.push(\"/view-announcements\");\n      }\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box className={classes.NftBreed}>\n      <Box className={classes.devicelistHeading}>\n        <Typography variant=\"h1\" className=\"headingText\">\n          Add New FAQ\n        </Typography>\n\n        <Divider className={classes.divider} />\n      </Box>\n      <Divider className={classes.divider} />\n      <Container maxWidth=\"md\">\n        <Box mt={10} mb={2} className={classes.main}>\n          <Grid container spacing={2}>\n            <Grid\n              item\n              md={12}\n              sm={12}\n              lg={12}\n              xs={12}\n              className={classes.image}\n            >\n              <Box mt={2}>\n                <form\n                  className=\"formBox p-0\"\n                  //   onSubmit={(event) => FormHandleSubmit(event)}\n                >\n                  <Grid container spacing={2} className=\"BreedDetails\">\n                    <FormControl\n                      variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <>\n                        <Box mt={2}>\n                          <Typography\n                            variant=\"h5\"\n                            color=\"primary\"\n                            style={{ paddingBottom: \"8px\" }}\n                          >\n                            Question :\n                          </Typography>\n                          <TextField\n                            variant=\"outlined\"\n                            // name=\"ques\"\n                            onChange={(e) => setQuestion(e.target.value)}\n                            // value={faqData.question}\n                            placeholder=\"Enter Your Question\"\n                            className={classes.textField}\n                          />\n                        </Box>\n                        <Box>\n                          <Box style={{ marginTop: \"10px\" }}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Answer :\n                            </Typography>\n                            <JoditEditor\n                              ref={editor}\n                              config={config}\n                              name=\"answer\"\n                              value={answer}\n                              onBlur={(e) => setAnswer(e)}\n                              tabIndex={1} // tabIndex of textarea\n                              onChange={(newContent) => {}}\n                            />\n                          </Box>\n                        </Box>\n                      </>\n\n                      <Box style={{ marginTop: \"16px\" }}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          className={classes.newbtn}\n                          onClick={() => history.push(\"/view-announcements\")}\n                        >\n                          Back\n                        </Button>\n                        &nbsp;&nbsp;\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          className={classes.newbtn}\n                          onClick={FormHandleSubmit}\n                        >\n                          Submit\n                        </Button>\n                      </Box>\n                    </FormControl>\n                  </Grid>\n                </form>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n"],"names":["sortAddress","add","slice","length","convertDateTime","val","tempDate","Date","moment","format","useStyles","makeStyles","theme","NftBreed","padding","formControl","margin","spacing","minWidth","width","main","border","borderRadius","backgroundColor","divider","marginTop","textField","maxWidth","image","cursor","upload","height","position","objectFit","bottom","right","color","fontSize","top","left","opacity","devicelistHeading","display","justifyContent","alignItems","palette","text","black","paddingRight","breakpoints","only","paddingLeft","background","CreateNFT","userProfileData","classes","history","useHistory","useState","setIsLoading","question","setQuestion","answer","setAnswer","editor","useRef","FormHandleSubmit","values","axios","method","url","apiConfig","headers","token","window","sessionStorage","getItem","data","statusCode","toast","push","console","log","className","variant","mt","mb","container","item","md","sm","lg","xs","style","paddingBottom","onChange","e","target","value","placeholder","ref","config","readonly","name","onBlur","tabIndex","newContent","newbtn","onClick"],"sourceRoot":""}