{"version":3,"file":"static/js/1744.871acf2e.chunk.js","mappings":"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","sources":["component/ButtonCircularProgress.js","views/auth/reset-password/VerifyOtp.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CircularProgress, Box, withStyles } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  circularProgress: {\n    color: \"green\",\n  },\n});\n\nfunction ButtonCircularProgress(props) {\n  const { size, classes } = props;\n  return (\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\n      <CircularProgress\n        size={size ? size : 24}\n        thickness={size ? (size / 5) * 24 : 5}\n        className={classes.circularProgress}\n      />\n    </Box>\n  );\n}\n\nButtonCircularProgress.propTypes = {\n  size: PropTypes.number,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\n","import React, { useState } from \"react\";\nimport \"src/scss/main.css\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Grid,\n  Button,\n  Container,\n  Link,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { useLocation } from \"react-router-dom\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport clsx from \"clsx\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport { FaFacebook, FaGoogle } from \"react-icons/fa\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { useHistory, Link as RouterComponent } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\nimport axios from \"axios\";\nimport Logo from \"src/component/Logo\";\nimport PageLoading from \"src/component/PageLoading\";\n\nimport { toast } from \"react-toastify\";\nimport * as yep from \"yup\";\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\nimport { values } from \"lodash\";\nconst useStyle = makeStyles((theme) => ({\n  boxbutton: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: \"10px\",\n    justifyContent: \"center\",\n    \"@media(max-width:960px)\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    \"@media(max-width:375px)\": {\n      // display: 'grid',\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  },\n  btnmain: {\n    textAlign: \"center\",\n  },\n  mainbox: {\n    backgroundColor: \"#afdbaf\",\n    padding: \"13px\",\n  },\n  emailerr: {\n    backgroundColor: \"#fd3333\",\n    paddingTop: \"3px\",\n    paddingBottom: \"3px\",\n    paddingLeft: \"3px\",\n    paddingRight: \"3px\",\n  },\n  pass: {\n    backgroundColor: \"#7c7676\",\n    paddingTop: \"3px\",\n    paddingBottom: \"3px\",\n    paddingLeft: \"3px\",\n    paddingRight: \"3px\",\n  },\n  upper: {\n    marginTop: \"205px\",\n  },\n  mainSocail: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    marginBottom: \"25px\",\n\n    \"& input\": {\n      border: \"none\",\n      outline: \"none\",\n      padding: \"8px\",\n      minWidth: \"439px\",\n      width: \"100%\",\n    },\n  },\n  subsocial: {\n    cursor: \"pointer\",\n    display: \"flex\",\n    border: \"1px solid hsl(0deg 0% 94%)\",\n  },\n  iconPart: {\n    color: \"#23a563\",\n    background: \"#d8ffeb\",\n    padding: \"8px\",\n    fontSize: \"18px\",\n  },\n\n  placeholder1: {\n    \"& input\": {\n      color: theme.palette.text.black,\n      \"&::placeholder\": {\n        color: theme.palette.text.black,\n      },\n    },\n  },\n  textSection: {\n    marginBottom: \"30px\",\n    textAlign: \"center\",\n  },\n  inputvalue: {\n    \"&::placeholder\": {\n      color: \"#fff !important\",\n    },\n  },\n  loginBox: {\n    \"& h2\": {\n      fontSize: \"40px\",\n      color: \"#F38500\",\n\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: \"30px !important\",\n      },\n    },\n    \"& label\": {\n      color: \"#ffffffde\",\n      fontSize: \"14px\",\n      fontWeight: \"400\",\n    },\n  },\n  loginForm1: {\n    \"& input\": {\n      borderRadius: \"5px\",\n    },\n  },\n}));\n\nfunction Login(props) {\n  const location = useLocation();\n  const [_saveEmail, setSaveEmail] = useState(location?.state);\n  console.log(\"location--->>>\", _saveEmail);\n\n  const history = useHistory();\n  const classes = useStyle();\n  const [isLoading, setLoader] = useState(false);\n  const VarifyOTPFunction = async (values) => {\n    setLoader(true);\n\n    try {\n      const res = await axios({\n        url: apiConfig.verifyOTP,\n        method: \"POST\",\n        data: {\n          otp: values.otp,\n          email: _saveEmail,\n        },\n      });\n      if (res?.data?.responseCode === 200) {\n        setLoader(false);\n        toast.success(\"OTP verified successfully\");\n\n        history.push(\"/reset-password\");\n      }\n    } catch (error) {\n      setLoader(false);\n\n      console.log(error);\n    }\n  };\n\n  return (\n    <Grid className=\"d-flex height100\">\n      {isLoading ? <PageLoading /> : \"\"}\n\n      <Box className=\"loginForm\">\n        <Grid container direction={\"column\"}>\n          <Box className={classes.loginBox}>\n            <Typography variant=\"h2\" className={classes.textSection} style={{}}>\n              OTP Verification\n            </Typography>\n            <Formik\n              initialValues={{\n                otp: \"\",\n              }}\n              initialStatus={{\n                success: false,\n                successMsg: \"\",\n              }}\n              validationSchema={yep.object().shape({\n                otp: yep\n                  .string()\n                  .required(\"Otp is required\")\n                  // .matches(/^[0-9]*$/, \"Must be a valid otp\")\n                  .max(6, \"Should not exceeds 6 digits\")\n                  .min(4, \"Must be only 4 digits\"),\n              })}\n              onSubmit={(values) => VarifyOTPFunction(values)}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n\n                touched,\n                values,\n                setFieldValue,\n              }) => (\n                <Form>\n                  <Box style={{ width: \"100%\" }} className={classes.loginForm1}>\n                    <label>OTP</label>\n                    <Box mt={1}>\n                      <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"otp\"\n                        value={values.otp}\n                        style={{ margin: \"0px\" }}\n                        placeholder=\"*Please enter your OTP.\"\n                        name=\"otp\"\n                        error={Boolean(touched.otp && errors.otp)}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                      />\n                      <FormHelperText error>\n                        {touched.otp && errors.otp}\n                      </FormHelperText>\n                    </Box>\n                  </Box>\n\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    mt={5}\n                  >\n                    &nbsp;&nbsp;\n                    <Button\n                      variant=\"contained\"\n                      size=\"large\"\n                      // onClick={() => history.push(\"reset-password\")}\n                      color=\"primary\"\n                      type=\"submit\"\n                      // disabled={isLoading}\n                    >\n                      Verify Otp &nbsp;\n                      {isLoading && <ButtonCircularProgress />}\n                    </Button>\n                  </Box>\n                </Form>\n              )}\n            </Formik>\n\n            {/*</Grid>*/}\n          </Box>\n        </Grid>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default Login;\n"],"names":["withStyles","theme","circularProgress","color","withTheme","props","size","classes","pl","display","thickness","className","useStyle","makeStyles","boxbutton","alignItems","marginTop","justifyContent","btnmain","textAlign","mainbox","backgroundColor","padding","emailerr","paddingTop","paddingBottom","paddingLeft","paddingRight","pass","upper","mainSocail","marginBottom","border","outline","minWidth","width","subsocial","cursor","iconPart","background","fontSize","placeholder1","palette","text","black","textSection","inputvalue","loginBox","breakpoints","down","fontWeight","loginForm1","borderRadius","location","useLocation","useState","state","_saveEmail","console","log","history","useHistory","isLoading","setLoader","VarifyOTPFunction","values","axios","url","apiConfig","method","data","otp","email","res","responseCode","toast","push","container","direction","variant","style","initialValues","initialStatus","success","successMsg","validationSchema","yep","shape","required","max","min","onSubmit","errors","handleBlur","handleChange","touched","setFieldValue","mt","margin","fullWidth","id","value","placeholder","name","error","Boolean","onBlur","onChange","type"],"sourceRoot":""}