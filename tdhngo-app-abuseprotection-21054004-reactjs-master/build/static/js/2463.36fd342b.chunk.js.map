{"version":3,"file":"static/js/2463.36fd342b.chunk.js","mappings":"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","sources":["utils/index.js","views/pages/Dashboard/Feedback Mgmt/FeedbackHome.js"],"sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport moment from \"moment\";\nexport function sortAddress(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 4)}`;\n  return sortAdd;\n}\n\nexport function sortString(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 10)}`;\n  return sortAdd;\n}\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const convertDateTime = (val) => {\n  var tempDate = new Date(val);\n  const toDateFormat = moment(tempDate).format(\"DD-MMM-yyyy hh:mm a\");\n  return toDateFormat;\n};\n\nexport const getBase64 = (file, cb) => {\n  let reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = function () {\n    cb(reader.result);\n  };\n  reader.onerror = function (err) {\n    console.log(\"Error: \", err);\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  TextField,\n  FormControl,\n  IconButton,\n  MenuItem,\n  Select,\n  Container,\n  Divider,\n  TableContainer,\n  TableCell,\n  Table,\n  TableRow,\n  TableBody,\n  Button,\n  TableHead,\n  InputAdornment,\n  withStyles,\n} from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { BsSearch } from \"react-icons/bs\";\nimport Page from \"src/component/Page\";\nimport moment from \"moment\";\nimport DataNotFound from \"src/component/DataNotFound\";\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\nimport { convertDateTime } from \"src/utils/index\";\nimport Filter from \"src/Filter/Filter\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n  NftBreed: {\n    padding: \"23px 0 \",\n  },\n  inputFeild: {\n    border: \"1px solid #F38500\",\n    padding: \"6px 0px\",\n    color: \"#fff\",\n    borderRadius: \"5px\",\n    // marginTop: \"5px\",\n    \"& svg\": {\n      color: \"#F38500\",\n      fontSize: \"16px\",\n    },\n  },\n  divider: {\n    marginTop: \"10px\",\n    background: \"#F38500\",\n  },\n  filterbox: {\n    marginTop: \"30px\",\n    \"& label\": {\n      fontSize: \"14px\",\n      fontWeight: \"400\",\n      color: \"#000\",\n    },\n  },\n}));\n\n//     userid: \"User12\",\n//     datetime: \"Jan 25,2022 19:50 PM\",\n//     rating: \"4\",\n//   },\n//   {\n//     feedbackid: \"278920\",\n//     userid: \"User12\",\n//     datetime: \"Jan 25,2022 19:50 PM\",\n//     rating: \"4\",\n//   },\n//   {\n//     feedbackid: \"278920\",\n//     userid: \"User12\",\n//     datetime: \"Jan 25,2022 19:50 PM\",\n//     rating: \"4\",\n//   },\n//   {\n//     feedbackid: \"278920\",\n//     userid: \"User12\",\n//     datetime: \"Jan 25,2022 19:50 PM\",\n//     rating: \"4\",\n//   },\n//   {\n//     feedbackid: \"278920\",\n//     userid: \"User12\",\n//     datetime: \"Jan 25,2022 19:50 PM\",\n//     rating: \"4\",\n//   },\n//   {\n//     feedbackid: \"278920\",\n//     userid: \"User12\",\n//     datetime: \"Jan 25,2022 19:50 PM\",\n//     rating: \"4\",\n//   },\n// ];\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#ffdead87\",\n    },\n  },\n}))(TableRow);\nexport default function Feedback() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [fromDate, setfromDate] = useState();\n  const [toDate, settoDate] = useState();\n  const [currentvalue, setCurrentValue] = useState(\"Rating\");\n  const [_feedback, setFeedBack] = useState([]);\n  const [openUserBlockUnblock, setOpenUserBlockUnblick] = useState(false);\n  const [search, setSearch] = useState();\n  const [usertype, setusertype] = useState(\"All Users\");\n  const [states, setStates] = useState();\n  const [destrict, setDistrict] = useState();\n  const [pages, setPages] = useState(1);\n  const [_limit, setLimit] = useState(`${10}`);\n\n  const FeedBackList = async () => {\n    try {\n      const res = await axios({\n        url: apiConfig.feedbackList,\n        method: \"POST\",\n        headers: {\n          token: window.sessionStorage.getItem(\"token\"),\n        },\n        data: {\n          page: `${pages}`,\n          limit: _limit,\n          search: search,\n          states: states,\n          districs: destrict,\n          fromDate: fromDate,\n          toDate: toDate,\n          // userStatus: usertype,\n        },\n      });\n      if (res) {\n        console.log(\"res--->>123\", res);\n        setFeedBack(res?.data?.result?.docs);\n      } else if (res?.data?.responseCode === 404) {\n        toast(res?.data?.responseMessage);\n      }\n    } catch (error) {\n      console.log();\n    }\n  };\n  useEffect(() => {\n    FeedBackList();\n  }, []);\n\n  return (\n    <>\n      <Page title=\"Feedback\">\n        <Box className={classes.NftBreed}>\n          <Box className={classes.devicelistHeading}>\n            <Typography variant=\"h1\">Feedback Management</Typography>\n          </Box>\n          <Filter\n            FeedBackList={FeedBackList}\n            _feedback={_feedback}\n            type=\"feedbackManagement\"\n            search={search}\n            setSearch={setSearch}\n            states={states}\n            setStates={setStates}\n            destrict={destrict}\n            setDistrict={setDistrict}\n            openUserBlockUnblock={openUserBlockUnblock}\n            setOpenUserBlockUnblick={setOpenUserBlockUnblick}\n            toDate={toDate}\n            settoDate={settoDate}\n            fromDate={fromDate}\n            setfromDate={setfromDate}\n            setusertype={setusertype}\n            usertype={usertype}\n          />\n\n          <Box>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow className={`${classes.tablerow1} tableHead`}>\n                    <TableCell style={{ width: \"50px\", padding: \"11px\" }}>\n                      Sr.No\n                    </TableCell>\n                    <TableCell>User Name</TableCell>\n                    <TableCell>UserID</TableCell>\n                    <TableCell>Feedback Date & Time</TableCell>\n                    <TableCell>Rating</TableCell>\n                    <TableCell align=\"center\">Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {_feedback &&\n                    _feedback.map((data, index) => (\n                      <StyledTableRow className={classes.tablerow}>\n                        <TableCell>{index + 1}</TableCell>\n\n                        <TableCell>{data?.userId?.userName}</TableCell>\n                        <TableCell>{data.userId?.userId}</TableCell>\n                        <TableCell>{convertDateTime(data.createdAt)}</TableCell>\n                        <TableCell>{data.rating}</TableCell>\n                        <TableCell align=\"center\">\n                          <IconButton>\n                            <VisibilityIcon\n                              // onClick={() => history.push(\"/feedbackBox\")}\n                              onClick={() =>\n                                history.push({\n                                  pathname: \"/feedbackBox\",\n                                  state: {\n                                    _FeedBack_id: data._id,\n                                  },\n                                })\n                              }\n                              style={{\n                                color: \"#F38500\",\n                                cursor: \"pointer\",\n                              }}\n                            />\n                          </IconButton>\n                        </TableCell>\n                      </StyledTableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            {_feedback.length === 0 && <DataNotFound />}\n          </Box>\n        </Box>\n      </Page>\n    </>\n  );\n}\n"],"names":["sortAddress","add","slice","length","convertDateTime","val","tempDate","Date","moment","format","useStyles","makeStyles","theme","NftBreed","padding","inputFeild","border","color","borderRadius","fontSize","divider","marginTop","background","filterbox","fontWeight","StyledTableRow","withStyles","root","backgroundColor","TableRow","Feedback","classes","history","useHistory","useState","fromDate","setfromDate","toDate","settoDate","_feedback","setFeedBack","openUserBlockUnblock","setOpenUserBlockUnblick","search","setSearch","usertype","setusertype","states","setStates","destrict","setDistrict","pages","_limit","FeedBackList","axios","url","apiConfig","method","headers","token","window","sessionStorage","getItem","data","page","limit","districs","res","console","log","result","docs","responseCode","toast","responseMessage","useEffect","title","className","devicelistHeading","variant","type","tablerow1","style","width","align","map","index","tablerow","userId","userName","createdAt","rating","onClick","push","pathname","state","_FeedBack_id","_id","cursor"],"sourceRoot":""}