{"version":3,"file":"static/js/2829.f86590d7.chunk.js","mappings":"ofA2BMA,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAK,MAAM,CACvCC,oBAAqB,CACnBC,OAAQ,oBACRC,QAAS,OACTC,aAAc,OAEhBC,SAAU,CACRF,QAAS,WAEXG,aAAY,QACVC,OAAQP,EAAMQ,QAAQ,GACtBC,SAAU,IACVC,MAAO,QAAM,SACL,UAEVC,KAAM,CACJT,OAAQ,oBACRC,QAAS,OACTC,aAAc,OACdQ,gBAAiB,WAEnBC,QAAS,CACPC,UAAW,OACXC,WAAY,WAEdC,UAAW,CACTC,SAAU,QAGZC,MAAO,CACLC,OAAQ,WAEVC,OAAQ,CAENC,OAAQ,QACRd,OAAQ,SACRY,OAAQ,UACRf,aAAc,OACdkB,SAAU,WACV,QAAS,CACPZ,MAAO,OACPW,OAAQ,OACRnB,OAAQ,oBAERqB,UAAW,SAGb,WAAY,CACVD,SAAU,WACVpB,OAAQ,kBACRsB,OAAQ,EACRC,MAAO,EACPb,gBAAiB,OACjBc,MAAO,OACPC,SAAU,OACV,UAAW,CACTf,gBAAiB,OACjBV,OAAQ,mBAEV,UAAW,CACTQ,MAAO,OACPW,OAAQ,OACRC,SAAU,WACVM,IAAK,IACLC,KAAM,IACNC,QAAS,KAIfC,kBAAmB,CACjBC,QAAS,OACTC,eAAgB,QAChBC,WAAY,SACZ,OAAQ,CACN/B,QAAS,SACTuB,MAAO1B,EAAMmC,QAAQC,KAAKC,OAE5B,YAAW,QACThB,OAAQ,OACRiB,aAAc,QACbtC,EAAMuC,YAAYC,KAAK,MAAQ,CAC9B9B,MAAO,OACPW,OAAQ,MACRiB,aAAc,QAGlB,YAAW,QACTjB,OAAQ,OACRoB,YAAa,QACZzC,EAAMuC,YAAYC,KAAK,MAAQ,CAC9B9B,MAAO,OACPW,OAAQ,MACRoB,YAAa,SAInBC,OAAQ,CACN,0BAA2B,CACzB5B,UAAW,SAGhB,IAEc,SAAS6B,EAAUC,GAAkB,IAAD,EAC3CC,EAAU/C,IACVgD,GAAUC,EAAAA,EAAAA,MAChB,GAA6BC,EAAAA,EAAAA,UAAS,MAAK,eAApCC,EAAS,KAAEC,EAAO,KACzBC,QAAQC,IAAI,oBAAqBH,GACjC,OAA6BD,EAAAA,EAAAA,UAAS,IAAG,eAAlCK,EAAO,KAAEC,EAAS,KACzB,GAAiCN,EAAAA,EAAAA,UAAS,IAAG,eAAtCO,EAAS,KAAEC,EAAW,KAG7B,IADeC,EAAAA,EAAAA,QAAO,OACiBT,EAAAA,EAAAA,UAAS,KAAG,eAA5CU,EAAY,KAAEC,EAAc,KACnCR,QAAQC,IAAI,2BAAyBM,GACrC,OAAoCV,EAAAA,EAAAA,UAAS,IAAG,eAChD,GADiB,KAAe,MACFA,EAAAA,EAAAA,UAAS,KAAG,eAC1C,GADc,KAAY,MACIA,EAAAA,EAAAA,aAAU,eAClCY,GADQ,KAAY,MACTC,EAAAA,EAAAA,OAEXC,EAAcF,EAASG,MACvBC,EAAyB,OAAXF,QAAW,IAAXA,OAAW,EAAXA,EAAaG,GAC3BC,EAAaN,EAASO,OAC5BhB,QAAQC,IAAI,aAAcc,GAE1B,IAAME,GAAsB,OAAXN,QAAW,IAAXA,OAAW,EAAXA,EAAaO,KAExBC,GAAcV,EAASO,OAAOI,MAAM,KAAK,GAC/CpB,QAAQC,IAAI,sBAAuBkB,IACnC,QAAiCtB,EAAAA,EAAAA,WAAS,GAAM,iBAAzCwB,GAAU,MAAEC,GAAU,MAC7B,IAAkCzB,EAAAA,EAAAA,UAAS,IAAG,iBAA5B0B,IAAF,MAAc,QAC9BC,EAAAA,EAAAA,YAAU,WACJP,IACFM,GAAaN,GAEjB,GAAG,CAACA,KAUJ,QAAgCpB,EAAAA,EAAAA,WAAQ,GACtC4B,SAAU,GACVC,WAAY,KAAE,sBACF,KAAE,oBACJ,IAAE,IACZ,iBAMF,IAXe,MAAa,OAWK7B,EAAAA,EAAAA,UALR,CACvB8B,aAAc,GACdC,YAAa,GACb9B,UAAW,MAE8C,iBAApD+B,GAAS,MAAEC,GAAW,MAC7B9B,QAAQC,IAAI,oBAAkB4B,IAEhBE,OAAOC,eAAeC,QAAQ,SAA5C,IA2BMC,GAAuBC,EAAAA,KAAaC,MAAM,CAC9CT,aAAcQ,EAAAA,KAEXE,SAAS,8BACTC,IAAI,EAAG,sCACPC,IAAI,GAAI,oCACXX,YAAaO,EAAAA,KAEVE,SAAS,4BACTC,IAAI,EAAG,sCACPC,IAAI,GAAI,sCAGb,IAAoC1C,EAAAA,EAAAA,YAAU,iBAAvC2C,GAAY,MAAEC,GAAW,MAChCzC,QAAQC,IAAI,2BAAyBuC,IACrC,IAAME,GAAoB,yCAAG,8IAEPC,IAAM,CACtBC,IAAKC,EAAAA,EAAAA,aACLC,OAAQ,MACRC,OAAQ,CACNC,IAAKnC,GAEPoC,QAAS,CACPC,MAAOnB,OAAOC,eAAeC,QAAQ,YAEtC,KAAD,GATIkB,EAAG,UAWPV,GAAe,OAAHU,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,WAAN,EAAH,EAAWC,QACvBrD,QAAQC,IAAI,gCAA8BkD,GACpCG,EAAmB,CACvB3B,aAAiB,OAAHwB,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,OAAQ,QAAR,EAAT,EAAWC,cAAM,WAAd,EAAH,EAAmBE,KACjC3B,YAAgB,OAAHuB,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,OAAQ,QAAR,EAAT,EAAWC,cAAM,WAAd,EAAH,EAAmBzB,YAChC9B,UAAc,OAAHqD,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,OAAQ,QAAR,EAAT,EAAWC,cAAM,WAAd,EAAH,EAAmBtF,OAEhCyC,EAAkB,OAAH2C,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,OAAQ,QAAR,EAAT,EAAWC,cAAM,WAAd,EAAH,EAAmBzB,aAClCE,GAAYwB,GACZvD,EAAW,OAAHoD,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,OAAQ,QAAR,EAAT,EAAWC,cAAM,WAAd,EAAH,EAAmBtF,OAC3BsC,EAAe,OAAH8C,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,OAAQ,QAAR,EAAT,EAAWC,cAAM,WAAd,EAAH,EAAmBtF,QAChC,gDAEDiC,QAAQC,IAAI,iBAAc,EAAD,IAAS,yDAErC,kBA5ByB,mCA8B1B,IAAwCJ,EAAAA,EAAAA,YAAU,iBAA3C2D,GAAa,MAAgB,MACpCxD,QAAQC,IAAI,qBAAsBuD,IAClC,IAOMC,GAAY,yCAAG,WAAOC,GAAM,8EAQmC,OAPnEpC,IAAW,GACPqC,EARgB,QAAhBxC,GACK0B,EAAAA,EAAAA,YAEAA,EAAAA,EAAAA,aAMT7C,QAAQC,IAAI,aACN2D,EAAW,IAAIC,UACZC,OAAO,OAAQJ,EAAO/B,cAC/BiC,EAASE,OAAO,cAAeJ,EAAO9B,aAEtCgC,EAASE,OAAO,QAAuB,OAAdhE,EAAqBI,EAAUJ,GAAW,mBAG/C6C,IAAM,CACtBC,IAAKe,EACLb,OAAwB,QAAhB3B,GAAwB,OAAS,MACzC8B,QAAS,CACPC,MAAOnB,OAAOC,eAAeC,QAAQ,UAEvCmB,KAAMQ,EACNb,OAAQ,CACNC,IAAKnC,KAEN,KAAD,GAVO,SAYPS,IAAW,GAEX3B,EAAQoE,KAAK,mBACd,kDAEDzC,IAAW,GAEXtB,QAAQC,IAAI,iBAAc,EAAD,IAAS,0DAErC,gBAhCiB,sCAoClB,OAHAuB,EAAAA,EAAAA,YAAU,WACRkB,IACF,GAAG,KAED,UAAC,IAAG,CAACsB,UAAWtE,EAAQxC,SAAS,UAC9BmE,IAAa,SAAC,IAAW,IAAM,IAChC,SAAC,IAAG,CAAC2C,UAAWtE,EAAQd,kBAAkB,UACxC,SAAC,IAAU,CAACqF,QAAQ,KAAKD,UAAU,cAAa,mBAC1C7C,GAAW,kBAGnB,SAAC,IAAO,CAAC6C,UAAWtE,EAAQhC,WAC5B,SAAC,IAAS,CAACI,SAAS,KAAI,UACtB,SAAC,KAAM,CACLoG,cAAerC,GACfsC,oBAAoB,EACpBC,cAAe,CACbC,SAAS,EACTC,WAAY,IAEdC,SAAU,SAACb,GAAM,OAAKD,GAAaC,EAAO,EAC1Cc,iBAAkBtC,GAAqB,SAEtC,gBACCuC,EAAM,EAANA,OACAC,EAAU,EAAVA,WACAC,EAAY,EAAZA,aAEAC,GADY,EAAZC,aACO,EAAPD,SACAlB,EAAM,EAANA,OACa,EAAboB,cAAa,OAEb,UAAC,KAAI,WACF9E,QAAQC,IAAI,YAAayD,IAC1B,UAAC,IAAG,CAACqB,GAAI,EAAGC,GAAI,EAAGhB,UAAWtE,EAAQlC,KAAK,WACzC,UAAC,IAAI,CAACyH,WAAS,EAAC5H,QAAS,EAAE,WACzB,SAAC,IAAI,CAAC6H,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,UACxC,SAAC,IAAG,CACFC,MAAO,CACL1G,QAAS,OACTC,eAAgB,SAChBvB,MAAO,QACP,UAEF,UAAC,IAAG,WACe,QAAhB4D,IACC,+BACE,oBAAQ6C,UAAWtE,EAAQzB,OAAO,WAChC,gBACEuH,IAAKtF,GAAoB,0BAE3B,UAAC,IAAU,YACT,SAAC,MAAQ,KACT,kBACEuF,KAAK,OACLC,OAAO,UACPC,SAAU,SAACC,GACT7F,EAAQ6F,EAAEC,OAAOC,MAAM,IACvB3F,EACE4F,IAAIC,gBAAgBJ,EAAEC,OAAOC,MAAM,IAEvC,YAKU,SAAhB3E,IACF,mBAAQ6C,UAAWtE,EAAQzB,OAAO,UAChC,gBACEuH,IACc,OAAZhD,SAAY,IAAZA,IAAAA,GAAczE,MACE,OAAZyE,SAAY,IAAZA,QAAY,EAAZA,GAAczE,MACd,6BAKV,oBAAQiG,UAAWtE,EAAQzB,OAAO,WAChC,gBAAKuH,IAAKtF,GAAoBE,KAC9B,UAAC,IAAU,YACT,SAAC,MAAQ,KACT,kBACEqF,KAAK,OACLC,OAAO,UACPC,SAAU,SAACC,GACT7F,EAAQ6F,EAAEC,OAAOC,MAAM,IACvB3F,EACE4F,IAAIC,gBAAgBJ,EAAEC,OAAOC,MAAM,IAEvC,UAmBS,QAAhB3E,IACC,+BACE,SAAC,IAAG,CAAC6C,UAAWtE,EAAQuG,OAAO,UAC7B,SAAC,IAAU,CAAChC,QAAQ,KAAK1F,MAAM,UAAS,qCAK1B,SAAhB4C,IACF,SAAC,IAAG,CACFoE,MAAO,CACL1G,QAAS,OACTC,eAAgB,SAChBvB,MAAO,QACP,UAEF,SAAC,IAAU,CAAC0G,QAAQ,KAAK1F,MAAM,UAAS,+BAK1C,SAAC,IAAG,CACFgH,MAAO,CACL1G,QAAS,OACTC,eAAgB,SAChBvB,MAAO,QACP,UAEF,SAAC,IAAU,CAAC0G,QAAQ,KAAK1F,MAAM,UAAS,2CAQlD,SAAC,IAAI,CACH2G,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJtB,UAAWtE,EAAQ3B,MAAM,UAEzB,SAAC,IAAG,WACF,iBAAMiG,UAAU,cAAckC,aAAa,MAAK,UAC9C,SAAC,IAAI,CAACjB,WAAS,EAAC5H,QAAS,EAAG2G,UAAU,eAAc,UAClD,SAAC,IAAW,CACVC,QAAQ,WACRD,UAAWtE,EAAQvC,YAAY,UAE/B,SAAC,IAAI,CAAC+H,MAAI,EAACI,GAAI,GAAIF,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAG,UACxC,UAAC,IAAG,CAACN,GAAI,EAAE,WACT,SAAC,IAAU,CACTd,QAAQ,KACR1F,MAAM,UACNgH,MAAO,CAAEY,cAAe,OAAQ,6BAKjB,QAAhBhF,IACC,+BACE,UAAC,IAAG,YACF,SAAC,IAAS,CACR8C,QAAQ,WACRV,KAAK,eACLkC,KAAK,OACLW,MAAO1C,EAAO/B,aACd0E,MAAOC,QACL1B,EAAQjD,cACN8C,EAAO9C,cAEX4E,OAAQ7B,EACRiB,SAAUhB,EACV6B,YAAY,6BACZxC,UAAWtE,EAAQ7B,aAErB,SAAC,IAAc,CACbwI,OAAK,EACLd,MAAO,CACLnI,OAAQ,MACRoB,SAAU,QACV,SAEDoG,EAAQjD,cACP8C,EAAO9C,oBAIG,SAAhBR,IACF,SAAC,IAAG,WACF,SAAC,IAAS,CACRsF,UAAQ,EACRxC,QAAQ,WAERyC,WAAY,CAAED,SAAU,QACxBL,MAAmB,OAAZ5D,SAAY,IAAZA,QAAY,EAAZA,GAAce,UAIzB,UAAC,IAAG,YACF,SAAC,IAAS,CACRU,QAAQ,WACRV,KAAK,eACLkC,KAAK,OACLc,OAAQ7B,EACRiB,SAAUhB,EACVyB,MAAO1C,EAAO/B,aACd0E,MAAOC,QACL1B,EAAQjD,cACN8C,EAAO9C,cAEX6E,YAAY,6BACZxC,UAAWtE,EAAQ7B,aAErB,SAAC,IAAc,CACbwI,OAAK,EACLd,MAAO,CACLnI,OAAQ,MACRoB,SAAU,QACV,SAEDoG,EAAQjD,cACP8C,EAAO9C,kCAW7B,SAAC,IAAI,CAACuD,MAAI,EAACI,GAAI,GAAIF,GAAI,GAAID,GAAI,GAAIE,GAAI,GAAG,UACxC,UAAC,IAAG,CAACN,GAAI,EAAE,WACT,SAAC,IAAU,CACTd,QAAQ,KACR1F,MAAM,UACNgH,MAAO,CAAEY,cAAe,OAAQ,oCAIjB,QAAhBhF,IACC,iCACE,SAAC,IAAG,WACF,SAAC,IAAS,CACR8C,QAAQ,WACRV,KAAK,cACLkC,KAAK,OACLc,OAAQ7B,EACRiB,SAAUhB,EACVyB,MAAO1C,EAAO9B,YACdyE,MAAOC,QACL1B,EAAQhD,aAAe6C,EAAO7C,aAEhC4E,YAAY,6BACZxC,UAAWtE,EAAQ7B,eAWvB,SAAC,IAAc,CACbwI,OAAK,EACLd,MAAO,CAAEnI,OAAQ,MAAOoB,SAAU,QAAS,SAE1CoG,EAAQhD,aAAe6C,EAAO7C,iBAGjB,SAAhBT,IACF,+BAaE,SAAC,IAAG,WACF,SAAC,IAAS,CACR8C,QAAQ,WACRyC,WAAY,CAAED,SAAU,QACxBE,WAAS,EACT,mBACAP,MAAa,OAAN1C,QAAM,IAANA,OAAM,EAANA,EAAQ9B,YACf4E,YAAY,cACZxC,UAAWtE,EAAQ7B,iBAOzB,iCACE,SAAC,IAAG,WACF,SAAC,IAAS,CACRoG,QAAQ,WACRV,KAAK,cACLkC,KAAK,OACLc,OAAQ7B,EACRiB,SAAUhB,EACVyB,MAAO1C,EAAO9B,YACdyE,MAAOC,QACL1B,EAAQhD,aAAe6C,EAAO7C,aAEhC4E,YAAY,6BACZxC,UAAWtE,EAAQ7B,eAUvB,SAAC,IAAc,CACbwI,OAAK,EACLd,MAAO,CAAEnI,OAAQ,MAAOoB,SAAU,QAAS,SAE1CoG,EAAQgC,MAAQnC,EAAOmC,mBAOpC,UAAC,IAAG,CACFrB,MAAO,CACL5H,UAAW,OACXkB,QAAS,OACTE,WAAY,SACZ8H,SAAU,OACV/H,eAAgB,WAChB,UAEe,SAAhBqC,KACC,SAAC,IAAM,CACL8C,QAAQ,YACR1F,MAAM,YACNuI,QAAS,kBAAMnH,EAAQoE,KAAK,gBAAgB,EAC5CC,UAAWtE,EAAQH,OAAO,kBAKb,SAAhB4B,KACC,iCACE,SAAC,IAAM,CACL8C,QAAQ,YACR1F,MAAM,UACNkH,KAAK,SACLzB,UAAWtE,EAAQH,OACnBuH,QAAS,kBAAMnH,EAAQoE,KAAK,gBAAgB,EAAC,kBAGtC,aAET,SAAC,IAAM,CACLE,QAAQ,YACR1F,MAAM,UACNkH,KAAK,SACLzB,UAAWtE,EAAQH,OAAO,uBAK/B,WAEgB,QAAhB4B,KACC,+BACE,SAAC,IAAG,WACF,SAAC,IAAM,CACL8C,QAAQ,YACRwB,KAAK,SACLlH,MAAM,UAAS,gCAStB,QAMnB,C,wGCnsBO,SAASwI,EAAYC,GAE1B,MADa,UAAS,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,MAAM,EAAG,GAAE,cAAS,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKC,MAAMD,EAAIE,OAAS,GAEnE,CAkBO,IAAMC,EAAkB,SAACC,GAC9B,IAAIC,EAAW,IAAIC,KAAKF,GAExB,OADqBG,IAAOF,GAAUG,OAAO,sBAE/C,C","sources":["component/StakingDetails.js","utils/index.js"],"sourcesContent":["import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  TextField,\n  FormControl,\n  IconButton,\n  FormHelperText,\n  MenuItem,\n  Select,\n  Container,\n  Divider,\n} from \"@material-ui/core\";\nimport * as yep from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form, Formik } from \"formik\";\nimport { FiUpload } from \"react-icons/fi\";\nimport { addImageHandler, getBase64 } from \"src/utils\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\nimport JoditEditor from \"jodit-react\";\nimport PageLoading from \"./PageLoading\";\nconst useStyles = makeStyles((theme) => ({\n  ctaegoryDescription: {\n    border: \"1px solid #f38500\",\n    padding: \"10px\",\n    borderRadius: \"5px\",\n  },\n  NftBreed: {\n    padding: \"23px 0 \",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\",\n    margin: \"0 10px\",\n  },\n  main: {\n    border: \"1px solid #F38500\",\n    padding: \"40px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"#FEDDB6\",\n  },\n  divider: {\n    marginTop: \"10px\",\n    background: \"#F38500\",\n  },\n  textField: {\n    maxWidth: \"100%\",\n  },\n\n  image: {\n    cursor: \"pointer\",\n  },\n  upload: {\n    // width: \"150px\",\n    height: \"250px\",\n    margin: \"16px 0\",\n    cursor: \"pointer\",\n    borderRadius: \"20px\",\n    position: \"relative\",\n    \"& img\": {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px solid #F38500\",\n      // borderRadius: \"50%\",\n      objectFit: \"cover\",\n    },\n\n    \"& button\": {\n      position: \"absolute\",\n      border: \"3px solid black\",\n      bottom: 0,\n      right: 0,\n      backgroundColor: \"#fff\",\n      color: \"#000\",\n      fontSize: \"15px\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n        border: \"3px solid black\",\n      },\n      \"& input\": {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        opacity: 0,\n      },\n    },\n  },\n  devicelistHeading: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    \"& h3\": {\n      padding: \"1rem 0\",\n      color: theme.palette.text.black,\n    },\n    \"& .icon1\": {\n      height: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingRight: \"7px\",\n      },\n    },\n    \"& .icon2\": {\n      height: \"20px\",\n      paddingLeft: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  newbtn: {\n    \"@media(max-width:400px)\": {\n      marginTop: \"10px\",\n    },\n  },\n}));\n\nexport default function CreateNFT(userProfileData) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [_imageurl, setFile] = useState(null);\n  console.log(\"_imageurl111====>\", _imageurl);\n  const [_imgDef, setImgDef] = useState(\"\");\n  const [_imgaeset, setImageSet] = useState(\"\");\n\n  const editor = useRef(null);\n  const [_description, setDescription] = useState(\"\");\n  console.log(\"_description11111-->>\", _description);\n  const [base64Img1, setBase64Img1] = useState(\"\");\n  const [imgFile, setImgfile] = useState(\"\");\n  const [profile, setprofile] = useState();\n  const location = useLocation();\n\n  const partnerData = location.state;\n  const idduserdata = partnerData?.id;\n  const _searchkey = location.search;\n  console.log(\"asdasdadad\", _searchkey);\n\n  const imagesec = partnerData?.logo;\n\n  const functionKey = location.search.split(\"?\")[1];\n  console.log(\"Locations key is >>\", functionKey);\n  const [_isloading, setLoading] = useState(false);\n  const [base64Img, setBase64Img] = useState(\"\");\n  useEffect(() => {\n    if (imagesec) {\n      setBase64Img(imagesec);\n    }\n  }, [imagesec]);\n  function imageUpload(event) {\n    let base64img = userData.profilepic;\n    let reader = new FileReader();\n    reader.onload = function () {\n      base64img = reader.result;\n      setBase64Img(base64img);\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  }\n  const [userData, setUserData] = useState({\n    coverPic: \"\",\n    profilePic: \"\",\n    profilePic: \"\",\n    coverPic: \"\",\n  });\n  const formInitialValue = {\n    categoryName: \"\",\n    description: \"\",\n    _imageurl: \"\",\n  };\n  const [_prefield, setPreField] = useState(formInitialValue);\n  console.log(\"_prefield--->>\", _prefield);\n\n  const token = window.sessionStorage.getItem(\"token\");\n  const UserManagementFunction = async (values) => {\n    const formdata = new FormData();\n    formdata.append(\"name\", values.categoryName);\n    formdata.append(\"description\", _description);\n\n    formdata.append(\"image\", _imageurl === null ? _imgDef : _imageurl);\n\n    try {\n      setLoading(true);\n\n      const res = await axios({\n        url: apiConfig.addCategory,\n        method: \"POST\",\n        headers: {\n          token: token,\n        },\n      });\n      if (res) {\n      }\n    } catch (error) {\n      setLoading(false);\n\n      console.log(error);\n    }\n  };\n\n  const formValidationSchema = yep.object().shape({\n    categoryName: yep\n      .string()\n      .required(\" Category name is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\"),\n    description: yep\n      .string()\n      .required(\" Description is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\"),\n  });\n  // VIEW API\n  const [_viewctagory, setCategory] = useState();\n  console.log(\"_viewctagory11111-->>\", _viewctagory);\n  const ViewCategoryFunction = async () => {\n    try {\n      const res = await axios({\n        url: apiConfig.viewCategory,\n        method: \"GET\",\n        params: {\n          _id: idduserdata,\n        },\n        headers: {\n          token: window.sessionStorage.getItem(\"token\"),\n        },\n      });\n      if (res) {\n        setCategory(res?.data?.result);\n        console.log(\"ViewCategoryFunction --->>\", res);\n        const formInitialValue = {\n          categoryName: res?.data?.result?.name,\n          description: res?.data?.result?.description,\n          _imageurl: res?.data?.result?.image,\n        };\n        setDescription(res?.data?.result?.description);\n        setPreField(formInitialValue);\n        setFile(res?.data?.result?.image);\n        setImageSet(res?.data?.result?.image);\n      }\n    } catch (error) {\n      console.log(\"error --->>\", error);\n    }\n  };\n  //Edit Category\n  const [_editcategory, setEditCtegory] = useState();\n  console.log(\"_editcategory99999\", _editcategory);\n  const functionkeyCheck = () => {\n    if (functionKey === \"Add\") {\n      return apiConfig.addCategory;\n    } else {\n      return apiConfig.editCategory;\n    }\n  };\n  const EditCategory = async (values) => {\n    setLoading(true);\n    let apiEndpoint = functionkeyCheck();\n    console.log(\"debugger\");\n    const formdata = new FormData();\n    formdata.append(\"name\", values.categoryName);\n    formdata.append(\"description\", values.description);\n\n    formdata.append(\"image\", _imageurl === null ? _imgDef : _imageurl);\n\n    try {\n      const res = await axios({\n        url: apiEndpoint,\n        method: functionKey === \"Add\" ? \"POST\" : \"PUT\",\n        headers: {\n          token: window.sessionStorage.getItem(\"token\"),\n        },\n        data: formdata,\n        params: {\n          _id: idduserdata,\n        },\n      });\n      if (res) {\n        setLoading(false);\n\n        history.push(\"./categoryMgmt\");\n      }\n    } catch (error) {\n      setLoading(false);\n\n      console.log(\"error--->>>\", error);\n    }\n  };\n  useEffect(() => {\n    ViewCategoryFunction();\n  }, []);\n  return (\n    <Box className={classes.NftBreed}>\n      {_isloading ? <PageLoading /> : \"\"}\n      <Box className={classes.devicelistHeading}>\n        <Typography variant=\"h1\" className=\"headingText\">\n          {`${functionKey} Category`}\n        </Typography>\n      </Box>\n      <Divider className={classes.divider} />\n      <Container maxWidth=\"md\">\n        <Formik\n          initialValues={_prefield}\n          enableReinitialize={true}\n          initialStatus={{\n            success: false,\n            successMsg: \"\",\n          }}\n          onSubmit={(values) => EditCategory(values)}\n          validationSchema={formValidationSchema}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            touched,\n            values,\n            setFieldValue,\n          }) => (\n            <Form>\n              {console.log(\"Sadqeqacc\", values)}\n              <Box mt={5} mb={2} className={classes.main}>\n                <Grid container spacing={2}>\n                  <Grid item md={12} sm={12} lg={12} xs={12}>\n                    <Box\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        width: \"100%\",\n                      }}\n                    >\n                      <Box>\n                        {functionKey === \"Add\" ? (\n                          <>\n                            <figure className={classes.upload}>\n                              <img\n                                src={_imgDef ? _imgDef : \"/images/plusIcon.png\"}\n                              />\n                              <IconButton>\n                                <FiUpload />\n                                <input\n                                  type=\"file\"\n                                  accept=\"image/*\"\n                                  onChange={(e) => {\n                                    setFile(e.target.files[0]);\n                                    setImgDef(\n                                      URL.createObjectURL(e.target.files[0])\n                                    );\n                                  }}\n                                />\n                              </IconButton>\n                            </figure>\n                          </>\n                        ) : functionKey === \"View\" ? (\n                          <figure className={classes.upload}>\n                            <img\n                              src={\n                                _viewctagory?.image\n                                  ? _viewctagory?.image\n                                  : \"/images/mentalIll.png\"\n                              }\n                            />\n                          </figure>\n                        ) : (\n                          <figure className={classes.upload}>\n                            <img src={_imgDef ? _imgDef : _imgaeset} />\n                            <IconButton>\n                              <FiUpload />\n                              <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={(e) => {\n                                  setFile(e.target.files[0]);\n                                  setImgDef(\n                                    URL.createObjectURL(e.target.files[0])\n                                  );\n                                }}\n                              />\n                            </IconButton>\n                          </figure>\n                        )}\n\n                        {/* <figure className={classes.upload}>\n                          <img\n                            src={base64Img ? base64Img : \"/images/t3.jpeg\"}\n                          />\n                          <IconButton>\n                            <FiUpload />\n                            <input\n                              type=\"file\"\n                              accept=\"image/*\"\n                              onChange={imageUpload}\n                            />\n                          </IconButton>\n                        </figure> */}\n                        {functionKey === \"Add\" ? (\n                          <>\n                            <Box className={classes.imgsec}>\n                              <Typography variant=\"h6\" color=\"primary\">\n                                Please select image\n                              </Typography>\n                            </Box>\n                          </>\n                        ) : functionKey === \"View\" ? (\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                              width: \"100%\",\n                            }}\n                          >\n                            <Typography variant=\"h6\" color=\"primary\">\n                              Category Image\n                            </Typography>\n                          </Box>\n                        ) : (\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                              width: \"100%\",\n                            }}\n                          >\n                            <Typography variant=\"h6\" color=\"primary\">\n                              Please select image\n                            </Typography>\n                          </Box>\n                        )}\n                      </Box>\n                    </Box>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <Grid container spacing={2} className=\"BreedDetails\">\n                          <FormControl\n                            variant=\"outlined\"\n                            className={classes.formControl}\n                          >\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\n                              <Box mt={2}>\n                                <Typography\n                                  variant=\"h5\"\n                                  color=\"primary\"\n                                  style={{ paddingBottom: \"8px\" }}\n                                >\n                                  Category Name :\n                                </Typography>\n\n                                {functionKey === \"Add\" ? (\n                                  <>\n                                    <Box>\n                                      <TextField\n                                        variant=\"outlined\"\n                                        name=\"categoryName\"\n                                        type=\"text\"\n                                        value={values.categoryName}\n                                        error={Boolean(\n                                          touched.categoryName &&\n                                            errors.categoryName\n                                        )}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        placeholder=\"Please enter category name\"\n                                        className={classes.textField}\n                                      />\n                                      <FormHelperText\n                                        error\n                                        style={{\n                                          margin: \"0px\",\n                                          fontSize: \"12px\",\n                                        }}\n                                      >\n                                        {touched.categoryName &&\n                                          errors.categoryName}\n                                      </FormHelperText>\n                                    </Box>\n                                  </>\n                                ) : functionKey === \"View\" ? (\n                                  <Box>\n                                    <TextField\n                                      readOnly\n                                      variant=\"outlined\"\n                                      // value=\"Mental Health and Well Being\"\n                                      inputProps={{ readOnly: \"true\" }}\n                                      value={_viewctagory?.name}\n                                    />\n                                  </Box>\n                                ) : (\n                                  <Box>\n                                    <TextField\n                                      variant=\"outlined\"\n                                      name=\"categoryName\"\n                                      type=\"text\"\n                                      onBlur={handleBlur}\n                                      onChange={handleChange}\n                                      value={values.categoryName}\n                                      error={Boolean(\n                                        touched.categoryName &&\n                                          errors.categoryName\n                                      )}\n                                      placeholder=\"Please enter category name\"\n                                      className={classes.textField}\n                                    />\n                                    <FormHelperText\n                                      error\n                                      style={{\n                                        margin: \"0px\",\n                                        fontSize: \"12px\",\n                                      }}\n                                    >\n                                      {touched.categoryName &&\n                                        errors.categoryName}\n                                    </FormHelperText>\n                                  </Box>\n                                )}\n                              </Box>\n                            </Grid>\n                          </FormControl>\n                        </Grid>\n                      </form>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12} lg={12}>\n                    <Box mt={2}>\n                      <Typography\n                        variant=\"h5\"\n                        color=\"primary\"\n                        style={{ paddingBottom: \"8px\" }}\n                      >\n                        Category Description :\n                      </Typography>\n                      {functionKey === \"Add\" ? (\n                        <>\n                          <Box>\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"description\"\n                              type=\"text\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.description}\n                              error={Boolean(\n                                touched.description && errors.description\n                              )}\n                              placeholder=\"Please enter category name\"\n                              className={classes.textField}\n                            />\n                            {/* <JoditEditor\n                              ref={editor}\n                              value={_description}\n                              // config={config}\n                              tabIndex={1} // tabIndex of textarea\n                              onBlur={(e) => setDescription(e)}\n                              onChange={(newContent) => {}}\n                            /> */}\n                          </Box>\n                          <FormHelperText\n                            error\n                            style={{ margin: \"0px\", fontSize: \"12px\" }}\n                          >\n                            {touched.description && errors.description}\n                          </FormHelperText>\n                        </>\n                      ) : functionKey === \"View\" ? (\n                        <>\n                          {/* <TextField\n                            variant=\"outlined\"\n                            inputProps={{ readOnly: \"true\" }}\n                            fullWidth\n                            aria-readonly\n                            value={_viewctagory?.description}\n                            placeholder=\"description\"\n                            className={classes.textField}\n                            multiline\n                            rows={4}\n                          >\n                            {\" \"} */}\n                          <Box>\n                            <TextField\n                              variant=\"outlined\"\n                              inputProps={{ readOnly: \"true\" }}\n                              fullWidth\n                              aria-readonly\n                              value={values?.description}\n                              placeholder=\"description\"\n                              className={classes.textField}\n                            />\n                          </Box>\n\n                          {/* </TextField> */}\n                        </>\n                      ) : (\n                        <>\n                          <Box>\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"description\"\n                              type=\"text\"\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              value={values.description}\n                              error={Boolean(\n                                touched.description && errors.description\n                              )}\n                              placeholder=\"Please enter category name\"\n                              className={classes.textField}\n                            />\n                            {/* <JoditEditor\n                              ref={editor}\n                              value={_description}\n                              tabIndex={1}\n                              onBlur={(e) => setDescription(e)}\n                              onChange={(newContent) => {}}\n                            /> */}\n                          </Box>\n                          <FormHelperText\n                            error\n                            style={{ margin: \"0px\", fontSize: \"12px\" }}\n                          >\n                            {touched.desc && errors.desc}\n                          </FormHelperText>\n                        </>\n                      )}\n                    </Box>\n                  </Grid>\n                </Grid>\n                <Box\n                  style={{\n                    marginTop: \"25px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \" center\",\n                  }}\n                >\n                  {functionKey === \"View\" && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => history.push(\"/categoryMgmt\")}\n                      className={classes.newbtn}\n                    >\n                      Back\n                    </Button>\n                  )}\n                  {functionKey === \"Edit\" && (\n                    <>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"button\"\n                        className={classes.newbtn}\n                        onClick={() => history.push(\"/categoryMgmt\")}\n                      >\n                        Back\n                      </Button>\n                      &nbsp; &nbsp;\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        className={classes.newbtn}\n                      >\n                        Update\n                      </Button>\n                    </>\n                  )}\n                  &nbsp;&nbsp;\n                  {functionKey === \"Add\" && (\n                    <>\n                      <Box>\n                        <Button\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                        >\n                          Submit\n                        </Button>\n                      </Box>\n                    </>\n                  )}\n                </Box>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n}\n","import { Contract } from \"@ethersproject/contracts\";\nimport moment from \"moment\";\nexport function sortAddress(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 4)}`;\n  return sortAdd;\n}\n\nexport function sortString(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 10)}`;\n  return sortAdd;\n}\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const convertDateTime = (val) => {\n  var tempDate = new Date(val);\n  const toDateFormat = moment(tempDate).format(\"DD-MMM-yyyy hh:mm a\");\n  return toDateFormat;\n};\n\nexport const getBase64 = (file, cb) => {\n  let reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = function () {\n    cb(reader.result);\n  };\n  reader.onerror = function (err) {\n    console.log(\"Error: \", err);\n  };\n};\n"],"names":["useStyles","makeStyles","theme","ctaegoryDescription","border","padding","borderRadius","NftBreed","formControl","margin","spacing","minWidth","width","main","backgroundColor","divider","marginTop","background","textField","maxWidth","image","cursor","upload","height","position","objectFit","bottom","right","color","fontSize","top","left","opacity","devicelistHeading","display","justifyContent","alignItems","palette","text","black","paddingRight","breakpoints","only","paddingLeft","newbtn","CreateNFT","userProfileData","classes","history","useHistory","useState","_imageurl","setFile","console","log","_imgDef","setImgDef","_imgaeset","setImageSet","useRef","_description","setDescription","location","useLocation","partnerData","state","idduserdata","id","_searchkey","search","imagesec","logo","functionKey","split","_isloading","setLoading","setBase64Img","useEffect","coverPic","profilePic","categoryName","description","_prefield","setPreField","window","sessionStorage","getItem","formValidationSchema","yep","shape","required","min","max","_viewctagory","setCategory","ViewCategoryFunction","axios","url","apiConfig","method","params","_id","headers","token","res","data","result","formInitialValue","name","_editcategory","EditCategory","values","apiEndpoint","formdata","FormData","append","push","className","variant","initialValues","enableReinitialize","initialStatus","success","successMsg","onSubmit","validationSchema","errors","handleBlur","handleChange","touched","handleSubmit","setFieldValue","mt","mb","container","item","md","sm","lg","xs","style","src","type","accept","onChange","e","target","files","URL","createObjectURL","imgsec","autoComplete","paddingBottom","value","error","Boolean","onBlur","placeholder","readOnly","inputProps","fullWidth","desc","flexWrap","onClick","sortAddress","add","slice","length","convertDateTime","val","tempDate","Date","moment","format"],"sourceRoot":""}