{"version":3,"file":"static/js/7430.243fbf64.chunk.js","mappings":"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","sources":["utils/index.js","views/pages/Dashboard/Emergency Management/AddEmergency.js"],"sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport moment from \"moment\";\nexport function sortAddress(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 4)}`;\n  return sortAdd;\n}\n\nexport function sortString(add) {\n  const sortAdd = `${add?.slice(0, 6)}...${add?.slice(add.length - 10)}`;\n  return sortAdd;\n}\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const convertDateTime = (val) => {\n  var tempDate = new Date(val);\n  const toDateFormat = moment(tempDate).format(\"DD-MMM-yyyy hh:mm a\");\n  return toDateFormat;\n};\n\nexport const getBase64 = (file, cb) => {\n  let reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = function () {\n    cb(reader.result);\n  };\n  reader.onerror = function (err) {\n    console.log(\"Error: \", err);\n  };\n};\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  makeStyles,\n  TextField,\n  FormControl,\n  IconButton,\n  FormHelperText,\n  MenuItem,\n  Select,\n  Container,\n  Divider,\n} from \"@material-ui/core\";\nimport * as yep from \"yup\";\nimport PageLoading from \"src/component/PageLoading\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { Form, Formik } from \"formik\";\nimport { FiUpload } from \"react-icons/fi\";\nimport { addImageHandler, getBase64 } from \"src/utils\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport apiConfig from \"src/APIconfig/ApiConfig\";\nimport JoditEditor from \"jodit-react\";\nimport { Key } from \"react-feather\";\nconst useStyles = makeStyles((theme) => ({\n  NftBreed: {\n    padding: \"23px 0 \",\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n    width: \"100%\",\n    // margin: \"0 10px\",\n  },\n  main: {\n    border: \"1px solid #F38500\",\n    padding: \"40px\",\n    borderRadius: \"15px\",\n    backgroundColor: \"#FEDDB6\",\n  },\n  divider: {\n    marginTop: \"10px\",\n    background: \"#F38500\",\n  },\n  textField: {\n    maxWidth: \"100%\",\n  },\n\n  image: {\n    cursor: \"pointer\",\n  },\n  upload: {\n    // width: \"150px\",\n    // height: \"150px\",\n    height: \"250px\",\n    margin: \"16px 0\",\n    cursor: \"pointer\",\n    borderRadius: \"20px\",\n    position: \"relative\",\n    \"& img\": {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px solid #F38500\",\n      // borderRadius: \"50%\",\n      objectFit: \"cover\",\n    },\n\n    \"& button\": {\n      position: \"absolute\",\n      border: \"3px solid black\",\n      bottom: 0,\n      right: 0,\n      backgroundColor: \"#fff\",\n      color: \"#000\",\n      fontSize: \"15px\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n        border: \"3px solid black\",\n      },\n      \"& input\": {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        opacity: 0,\n      },\n    },\n  },\n  devicelistHeading: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    \"& h3\": {\n      padding: \"1rem 0\",\n      color: theme.palette.text.black,\n    },\n    \"& .icon1\": {\n      height: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingRight: \"7px\",\n      },\n    },\n    \"& .icon2\": {\n      height: \"20px\",\n      paddingLeft: \"20px\",\n      [theme.breakpoints.only(\"xs\")]: {\n        width: \"50px\",\n        height: \"8px\",\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  newbtn: {\n    \"@media(max-width:400px)\": {\n      marginTop: \"10px\",\n    },\n  },\n}));\n\nexport default function CreateNFT() {\n  const classes = useStyles();\n  const history = useHistory();\n  const editor = useRef(null);\n  const [base64Img1, setBase64Img1] = useState(\"\");\n  const [imgFile, setImgfile] = useState(\"\");\n  const [profile, setprofile] = useState();\n  const location = useLocation();\n  const [_imageurl, setFile] = useState(null);\n  console.log(\"_imageurl-----aaa\", _imageurl);\n\n  const [currentvalue, setCurrentValue] = useState(\"Select\");\n  console.log(\"location--->>12\", currentvalue);\n  const partnerData = location.state;\n  const idduserdata = partnerData?.id;\n  console.log(\"asdasdadad\", idduserdata);\n\n  // const [isLoading, setLoader] = useState(false);\n  const imagesec = partnerData?.logo;\n\n  const functionKey = location.search.split(\"?\")[1];\n  console.log(\"Locations key is >>\", functionKey);\n  const [_imgDef, setImgDef] = useState(\"\");\n  console.log(\"_imageurl--->>\", _imgDef);\n  const [base64Img, setBase64Img] = useState(\"\");\n  console.log(\"base64Img---->>>11\", base64Img);\n\n  const formInitialSchema = {\n    category: \"\",\n    locationName: \"\",\n    contactnumber: \"\",\n    district: \"\",\n    stateName: \"\",\n    image: \"\",\n    // base64Img: \"\",\n    // currentvalue: \"\",\n    // idduserdata: \"\",\n    // partnerName: partnerData?.partnerName,\n    // url: partnerData?.url,\n  };\n\n  const [_viewDetails, setViewDetails] = useState(formInitialSchema);\n  console.log(\"_viewDetails11111--->>\", _viewDetails);\n  const formValidationSchema = yep.object().shape({\n    category: yep.string().required(\" District is required\"),\n\n    //   .max(35, \"You can enter only 35 characters\")\n    //   .matches(\n    //     /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/,\n    //     \"Only alphabets and white spaces are allowed for this field number are not. \"\n    //   ),\n    locationName: yep\n      .string()\n      .required(\"location name is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\"),\n    district: yep\n      .string()\n      .required(\" district name is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\"),\n    stateName: yep\n      .string()\n      .required(\" state name name is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(35, \"You can enter only 35 characters\"),\n    contactnumber: yep\n      .string()\n      .required(\"contact number is required\")\n      .min(2, \"Please enter at least 2 characters\")\n      .max(10, \"You can enter only 10 characters\"),\n  });\n  //token\n  const token = window.sessionStorage.getItem(\"token\");\n\n  // View Emergency\n  const [_viewemergency, setViewEmergency] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n\n  //Edit Api\n\n  const AddMerergency = async (values) => {\n    console.log(\"values111-->\", values);\n    const formdata = new FormData();\n    formdata.append(\"emergencyType\", values.category);\n    formdata.append(\"location\", values.locationName);\n    formdata.append(\"contactNumber\", values.contactnumber);\n    formdata.append(\"district\", values.district);\n    formdata.append(\"state\", values.stateName);\n    formdata.append(\"image\", _imageurl === null ? _imgDef : _imageurl);\n    // formdata.append(\"emergencyId\", idduserdata);\n    try {\n      setLoading(true);\n      const res = await axios({\n        url: apiConfig.addEmergency,\n        method: \"POST\",\n        data: formdata,\n        headers: {\n          token: token,\n        },\n      });\n      if (res) {\n        setLoading(false);\n        history.push(\"/emergencyMgmt\");\n        console.log(\"res--qqqq>>\", res);\n      }\n    } catch (error) {\n      setLoading(false);\n      console.log(\"error-->>\", error);\n    }\n  };\n\n  return (\n    <Box className={classes.NftBreed}>\n      {isLoading ? <PageLoading /> : \"\"}\n\n      <Box className={classes.devicelistHeading}>\n        <Typography variant=\"h1\" className=\"headingText\">\n          Add Emergency Details\n        </Typography>\n      </Box>\n      <Divider className={classes.divider} />\n      <Container maxWidth=\"md\">\n        <Formik\n          initialValues={formInitialSchema}\n          initialStatus={{\n            success: false,\n            successMsg: \"\",\n          }}\n          enableReinitialize={true}\n          // onSubmit={handleSubmit}\n          validationSchema={formValidationSchema}\n          onSubmit={(values) => AddMerergency(values)}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            touched,\n            values,\n            setFieldValue,\n          }) => (\n            <Form onSubmit={handleSubmit}>\n              {console.log(\"Sadqeqacc\", values)}\n              <Box mt={5} mb={2} className={classes.main}>\n                <Grid container spacing={2}>\n                  <Grid item md={12} sm={12} lg={12} xs={12}>\n                    <Box\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        width: \"100%\",\n                      }}\n                    >\n                      <Box>\n                        <figure className={classes.upload}>\n                          <img\n                            src={_imgDef ? _imgDef : \"/images/plusIcon.png\"}\n                          />\n                          <IconButton>\n                            <FiUpload />\n                            <input\n                              type=\"file\"\n                              accept=\"image/*\"\n                              onChange={(e) => {\n                                setFile(e.target.files[0]);\n                                setImgDef(\n                                  URL.createObjectURL(e.target.files[0])\n                                );\n                              }}\n                            />\n                          </IconButton>\n                        </figure>\n\n                        {/* <IconButton>\n                          <FiUpload /> */}\n                        {/* <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={(e) => {\n                              setFile(e.target.files[0]);\n                              setImgDef(URL.createObjectURL(e.target.files[0]));\n                            }}\n                          /> */}\n                        {/* </IconButton> */}\n\n                        <Box className={classes.imgsec}>\n                          <Typography variant=\"h6\" color=\"primary\">\n                            Please select image\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </Box>\n                  </Grid>\n\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Box mt={2}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Emergency Type :\n                            </Typography>\n\n                            <FormControl\n                              variant=\"outlined\"\n                              className={classes.formControl}\n                            >\n                              <Box>\n                                <Select\n                                  name=\"category\"\n                                  labelId=\"demo-simple-select-outlined-label\"\n                                  id=\"demo-simple-select-outlined\"\n                                  //   onChange={(e) =>\n                                  //     setCurrentValue(e.target.value)\n                                  //   }\n                                  error={Boolean(\n                                    touched.category && errors.category\n                                  )}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  value={values.category}\n                                  style={{ width: \"100%\" }}\n                                >\n                                  <MenuItem value=\"Select\">\n                                    Select Category\n                                  </MenuItem>\n                                  <MenuItem value=\"FIRE\">FIRE</MenuItem>\n                                  <MenuItem value=\"POLICE_STATION\">\n                                    {\" \"}\n                                    POLICE_STATION\n                                  </MenuItem>\n                                  <MenuItem value=\"AMBULANCE\">\n                                    AMBULANCE\n                                  </MenuItem>\n                                  <MenuItem value=\"WOMEN_HELPLINE\">\n                                    WOMEN_HELPLINE\n                                  </MenuItem>\n                                </Select>\n                              </Box>\n                              <FormHelperText\n                                error\n                                style={{\n                                  margin: \"0px\",\n                                  fontSize: \"12px\",\n                                }}\n                              >\n                                {touched.category && errors.category}\n                              </FormHelperText>\n                            </FormControl>\n                          </Box>\n                        </FormControl>\n                      </form>\n                    </Box>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Box mt={2}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Location Name :\n                            </Typography>\n\n                            <>\n                              <Box>\n                                <TextField\n                                  variant=\"outlined\"\n                                  name=\"locationName\"\n                                  type=\"text\"\n                                  // name=\"\"\n                                  value={values.locationName}\n                                  error={Boolean(\n                                    touched.locationName && errors.locationName\n                                  )}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  placeholder=\"Please enter location\"\n                                  className={classes.textField}\n                                />\n                                <FormHelperText\n                                  error\n                                  style={{\n                                    margin: \"0px\",\n                                    fontSize: \"12px\",\n                                  }}\n                                >\n                                  {touched.locationName && errors.locationName}\n                                </FormHelperText>\n                              </Box>\n                            </>\n                          </Box>\n                        </FormControl>\n                      </form>\n                    </Box>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Box mt={1}>\n                            <Box>\n                              <Typography\n                                variant=\"h5\"\n                                color=\"primary\"\n                                style={{ paddingBottom: \"8px\" }}\n                              >\n                                District :\n                              </Typography>\n\n                              <TextField\n                                readOnly\n                                variant=\"outlined\"\n                                name=\"district\"\n                                error={Boolean(\n                                  touched.district && errors.district\n                                )}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                placeholder=\"district\"\n                                value={_viewemergency?.location}\n                              />\n                              <FormHelperText\n                                error\n                                style={{\n                                  margin: \"0px\",\n                                  fontSize: \"12px\",\n                                }}\n                              >\n                                {touched.district && errors.district}\n                              </FormHelperText>\n                            </Box>\n                          </Box>\n                        </FormControl>\n                      </form>\n                    </Box>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <FormControl\n                      variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <Box mt={1}>\n                        <Typography\n                          variant=\"h5\"\n                          color=\"primary\"\n                          style={{ paddingBottom: \"8px\" }}\n                        >\n                          State :\n                        </Typography>\n\n                        <Box>\n                          <TextField\n                            variant=\"outlined\"\n                            name=\"stateName\"\n                            type=\"text\"\n                            value={values.stateName}\n                            error={Boolean(\n                              touched.stateName && errors.stateName\n                            )}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            placeholder=\"Please enter state\"\n                            className={classes.textField}\n                          />\n                          <FormHelperText\n                            error\n                            style={{\n                              margin: \"0px\",\n                              fontSize: \"12px\",\n                            }}\n                          >\n                            {touched.stateName && errors.stateName}\n                          </FormHelperText>\n                        </Box>\n                      </Box>\n                    </FormControl>\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    sm={12}\n                    lg={12}\n                    xs={12}\n                    className={classes.image}\n                  >\n                    <Box>\n                      <form className=\"formBox p-0\" autoComplete=\"off\">\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Box mt={1}>\n                            <Typography\n                              variant=\"h5\"\n                              color=\"primary\"\n                              style={{ paddingBottom: \"8px\" }}\n                            >\n                              Contact Number :\n                            </Typography>\n\n                            <Box>\n                              <TextField\n                                variant=\"outlined\"\n                                name=\"contactnumber\"\n                                type=\"number\"\n                                value={values.contactnumber}\n                                error={Boolean(\n                                  touched.contactnumber && errors.contactnumber\n                                )}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                placeholder=\"Please enter contact number\"\n                                className={classes.textField}\n                              />\n                              <FormHelperText\n                                error\n                                style={{\n                                  margin: \"0px\",\n                                  fontSize: \"12px\",\n                                }}\n                              >\n                                {touched.contactnumber && errors.contactnumber}\n                              </FormHelperText>\n                            </Box>\n                          </Box>\n                        </FormControl>\n                      </form>\n                    </Box>\n                  </Grid>\n                </Grid>\n                <Box\n                  style={{\n                    marginTop: \"25px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \" center\",\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => history.push(\"/emergencyMgmt\")}\n                    className={classes.newbtn}\n                  >\n                    Back\n                  </Button>\n                  &nbsp;&nbsp;\n                  <Box>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                      Add Emergency\n                    </Button>\n                  </Box>\n                </Box>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n}\n"],"names":["sortAddress","add","slice","length","convertDateTime","val","tempDate","Date","moment","format","useStyles","makeStyles","theme","NftBreed","padding","formControl","minWidth","width","main","border","borderRadius","backgroundColor","divider","marginTop","background","textField","maxWidth","image","cursor","upload","height","margin","position","objectFit","bottom","right","color","fontSize","top","left","opacity","devicelistHeading","display","justifyContent","alignItems","palette","text","black","paddingRight","breakpoints","only","paddingLeft","newbtn","CreateNFT","classes","history","useHistory","useRef","useState","location","useLocation","_imageurl","setFile","console","log","currentvalue","partnerData","state","idduserdata","id","logo","functionKey","search","split","_imgDef","setImgDef","base64Img","formInitialSchema","category","locationName","contactnumber","district","stateName","_viewDetails","formValidationSchema","yep","shape","required","min","max","token","window","sessionStorage","getItem","_viewemergency","isLoading","setLoading","AddMerergency","values","formdata","FormData","append","axios","url","apiConfig","method","data","headers","res","push","className","variant","initialValues","initialStatus","success","successMsg","enableReinitialize","validationSchema","onSubmit","errors","handleBlur","handleChange","handleSubmit","touched","setFieldValue","mt","mb","container","spacing","item","md","sm","lg","xs","style","src","type","accept","onChange","e","target","files","URL","createObjectURL","imgsec","autoComplete","paddingBottom","name","labelId","error","Boolean","onBlur","value","placeholder","readOnly","flexWrap","onClick"],"sourceRoot":""}